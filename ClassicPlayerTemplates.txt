
        <script type="text/ng-template" id="vlcAccordionGroup.html">
            <div class='panel panel-oui'>
                <div class='panel-heading' ng-click='toggleOpen()'>
                    <span accordion-transclude='heading' class='panel-title' ng-class='{"text-muted": isDisabled}'>{{::heading}}</span>
                    <span class="icon icon-v-step-current active" aria-hidden="true" ng-if='step.bAccordionActive'></span>
                    <span class="icon icon-v-step-prestine inactive" aria-hidden="true" ng-if='step.dirty === undefined || step.dirty === null'></span>
                    <span class="icon icon-v-check-circle-line" aria-hidden="true" ng-if='step.dirty === true && step.tInvalid === false && !step.bAccordionActive'></span>
                    <span class="icon icon-v-close-circle-line" aria-hidden="true" ng-if='step.dirty === true && step.tInvalid === true && !step.bAccordionActive'></span>
                </div>
                <div class='panel-collapse panel-body' collapse='!isOpen'>
                    <div class="col-md-12 col-sm-12 vlc-knowledge-pc vlc-textblock" ng-init="showCart = true;" ng-if='step.articleTitle'>
                        <div class="head-item cart-toggle" >
                            <h4 class='field-label vlc-textblock-label'><a href="{{step.articleLink}}" target="_blank">{{step.articleTitle}}</a></h4>
                            <span class="vlc-knowledge-abody toggle-icon" ng-click="showCart = !showCart;" ng-class="{'icon-v-up-caret':showCart, 'icon-v-down-caret': !showCart}"></span>
                            <i class="vlc-knowledge-icon icon-v-close-circle-line" ng-click='step.articleTitle="";step.articleBody="";step.articleLink=""'></i>
                        </div>
                        <div class='vlc-textblock-text' ng-show="showCart">
                            <p ng-bind-html='step.articleBody'></p>
                        </div>
                    </div>
                    <div ng-transclude></div>
                </div>
            </div>
        </script>

        <script type="text/ng-template" id="vlcKnowledgeBody.html">
            <div class='vlocity'>
                <div class="modal-header">
                    <h3 class="modal-title">{{step.articleTitle}}</h3>
                </div>
                <div class="modal-body">
                    <div class="panel panel-default">
                        <div class='vlc-textblock-text'>
                            <p ng-bind-html='step.articleBody'></p>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-warning" ng-click="cancel()">OK</button>
                </div>
            </div>
        </script>        

        <script type="text/ng-template" id="vlcAccordion.html">
           <div class='panel-group' ng-transclude></div>
        </script>
        
        <script type="text/ng-template" id="vlcEmpty.html">
        </script>        

        <script type="text/ng-template" id="vlcVertPC.html">
            <div ng-if="bpTree.showPC">
                <ng-include ng-repeat="vlcPC in ::bpTree.propSetMap.persistentComponent" ng-if='bpTree.showPCNew[vlcPC.pcIndex]' id='{{::vlcPC.id}}' src="::bpTree.dfVertPSTmpl[vlcPC.pcIndex]"/>
            </div>
        </script>
        
        <script type="text/ng-template" id="vlcVKnowledge.html">
            <div class="horizontal-cart vlc-knowledge-pc vlc-cart-knowledge-padding" ng-init="showCart = false;">
                <ng-include src="'vlcVKnowledgeAux.html'"/>
            </div>
        </script>        
                
        <script type="text/ng-template" id="vlcVKnowledgeAux.html">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <div class="head-item cart-toggle" ng-click="showCart = !showCart;">
                        <span class="vlc-knowledge-icon icon-v-document2-line pull-left"></span>
                        <h3 class="panel-title pull-left">{{::vlcPC.label}}</h3>
                        <span class="toggle-icon pull-left" ng-class="{'icon-v-up-caret':showCart, 'icon-v-down-caret': !showCart}"></span>
                        <br/>
                    </div>                    
                </div>
                <div class="panel-body" ng-show="showCart">
                    <h5 class="panel-title vlc-knoledge-cat" ng-if="kLabel = getKnowledgeDataCatLabel(bpTree.children[bpTree.asIndex], vlcPC)">{{kLabel}}</h5>
                    <div class="input-group input-search">
                        <input type="text" id='vlcKnowledgeKeyword' class="form-control" placeholder="{{::OmniScriptSearch}}" ng-model-options="{ updateOn: 'change blur' }" ng-model='bpTree.children[bpTree.asIndex].knowledgeKeyword' ng-enter='searchKnowledgeArticle(bpTree.children[bpTree.asIndex], true)'></input>
                        <div class="input-group-btn">
                            <button class="btn btn-link" ng-click='searchKnowledgeArticle(bpTree.children[bpTree.asIndex], true)'><i class="icon icon-v-search"></i></button>
                        </div> 
                    </div>
                    <div class="vlc-knowledge row" ng-repeat="i in bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]][bpTree.pcItemsKey[vlcPC.pcIndex]]">
                        <div class="col-md-12">
                            <!-- <h4 class="vlc-knowledge-title"><a href="/articles/{{i.aType}}/{{i.urlName}}" target="_blank">{{i.title}}</a>
                                <i class="icon-v-expand-box vlc-icon-knowledge" ng-click='getArticleBody(bpTree.children[bpTree.asIndex], i)' data-placement="top" bs-tooltip='::OmniScriptOpen'></i>
                                <i class="icon-v-modal vlc-icon-knowledge" ng-click='getArticleBody(bpTree.children[bpTree.asIndex], i, true)' data-placement="top" bs-tooltip='::OmniScriptModal'></i>
                            </h4> -->
                            <h4 class="vlc-knowledge-title"><a href ng-click='openArticleInConsole(i)'>{{i.title}}</a>
                                <i class="icon-v-expand-box vlc-icon-knowledge" ng-click='getArticleBody(bpTree.children[bpTree.asIndex], i)' data-placement="top" bs-tooltip='::OmniScriptOpen'></i>
                                <i class="icon-v-modal vlc-icon-knowledge" ng-click='getArticleBody(bpTree.children[bpTree.asIndex], i, true)' data-placement="top" bs-tooltip='::OmniScriptModal'></i>
                            </h4>    
                        </div>
                        <div class="col-md-12 vlc-knowledge-summary">
                            <label class="item-name">{{i.summary}}</label>
                        </div>
                        <div class="col-md-12">
                            <label class="item-name">{{i.displayType}} | {{::OmniScriptLastPublished}} {{i.lastPubDate}}</label>
                        </div>
                    </div>
                </div>
            </div>
        </script>                
                
        <script type="text/ng-template" id="vlcTopCartHierarchy.html">
            <div class="item-name hcart-item-name">
                <div class="hcart-icon-pointer level-{{i.level}}">
                    <span ng-if="(i.isExpanded && i.cartItems !== undefined)">
                        <a ng-click="i.isExpanded = !i.isExpanded"><span class="glyphicon icon-v-down-arrow vcart-icon-arrow"></span></a>
                    </span>
                    <span ng-if="(!i.isExpanded && i.cartItems !== undefined)">
                        <a ng-click="i.isExpanded = !i.isExpanded"><span class="glyphicon icon-v-right-arrow vcart-icon-arrow"></span></a>
                    </span>
                </div>
                <label class="item-name">{{i.itemSObject.PricebookEntry.Product2.Name}}</label>
            </div>
            <div class="price hcart-item">
                 <label>{{::OmniOneTime}}</label>
                 <p>
                     <span class="price old-price" ng-show="i.itemSObject[nsPrefix + 'OneTimeCharge__c'] > i.itemSObject[nsPrefix + 'OneTimeTotal__c']">
                         {{i.itemSObject[nsPrefix + 'OneTimeCharge__c'] | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}
                     </span>
                     <span class="price" ng-class="{'new-price':i.itemSObject[nsPrefix + 'OneTimeCharge__c'] > i.itemSObject[nsPrefix + 'OneTimeTotal__c']}">
                         {{i.itemSObject[nsPrefix + 'OneTimeTotal__c'] | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}
                     </span>
                 </p>
            </div>
            <div class="price hcart-item">
                <label>{{::OmniMonthly}}</label>
                <p>
                    <span class="price old-price" ng-show="i.itemSObject[nsPrefix + 'RecurringCharge__c'] > i.itemSObject[nsPrefix + 'RecurringTotal__c']">
                        {{i.itemSObject[nsPrefix + 'RecurringCharge__c'] | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}
                    </span>
                    <span class="price" ng-class="{'new-price':i.itemSObject[nsPrefix + 'RecurringCharge__c'] > i.itemSObject[nsPrefix + 'RecurringTotal__c']}">
                        {{i.itemSObject[nsPrefix + 'RecurringTotal__c'] | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}
                    </span>
                </p>
            </div>
            <div class="quantity hcart-item quantity-item">
                <div class="quantity-vcart">
                    <span class="times">x</span>
                    <input type="number" name="quantity" min='0' step="1" ng-model="i.itemSObject.Quantity" ng-change="pcAction(vlcPC.pcIndex, bpTree, this, i, 'Update')"/>
                    <!--
                    <input type="number" name="quantity" min='0' step="1" ng-model="i.itemSObject.Quantity" ng-disabled="true"/>
                    -->
                    <div class="vlc-prod-conf-setting">
                        <span class="trash-icon icon-v-trash icon-h-trash" ng-click="pcAction(vlcPC.pcIndex, bpTree, this, i, 'Delete')"></span>
                        <span class="vlc-prod-span-setting" ng-if="i.isRoot && i.isConfigurable"><span class="glyphicon icon-v-setting" ng-click="configureItem(bpTree, null, this, i, 'configureProdInCart', baseCtrl.customHandleSelectedItem, baseCtrl.customIsConfigurable, vlcPC.pcIndex)"></span></span>
                    </div>
                </div>
            </div>
            <span class = 'vlocity-error vlocity-error-cart level-{{i.level}}' ng-repeat="e in i.errors">
                <div></div>
                {{e}}
            </span>

            <div ng-if ="i.cartItems !== undefined" collapse="!(i.isExpanded)">
                <div  id="dummy"></div>
                <div class="hcart-child-items" ng-repeat="i in i.cartItems" ng-include="'vlcTopCartHierarchy.html'">
            </div>
        </script>                
                
        <script type="text/ng-template" id="vlcVCart.html">
            <div class="horizontal-cart vlc-cart-knowledge-padding" ng-init="showCart = false;setJSDataPreprocessor(vlcPC, baseCtrl.createCartHierarchy)">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <div class="head-item cart-toggle" ng-click="showCart = !showCart;">
                            <span class="cart-icon icon-v-cart-line"></span>
                            <h3 class="panel-title">{{::vlcPC.label}}</h3>
                            <span class="toggle-icon" ng-class="{'icon-v-up-caret':showCart, 'icon-v-down-caret': !showCart}"></span>
                        </div>
                        <div class="head-item">
                            <label>{{::OmniOneTime}}</label>
                            <h4>{{bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].OneTimeSum | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }} &nbsp;</h4>
                        </div>
                        <div class="head-item">
                            <label>{{::OmniMonthly}}</label>
                            <h4>{{bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].RecurringSum | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }} &nbsp;</h4>
                        </div>

                        <!--
                        <div class="head-item padding0">
                            <button class="btn btn-primary">Continue</button>
                        </div>
                        -->
                    </div>
                    <div class="panel-body" ng-show="showCart">
                        <section class="hcart-section">
                            <h3>{{::vlcPC.label}}</h3>
                            <div class="topcartitems" ng-repeat="i in bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]][bpTree.pcItemsKey[vlcPC.pcIndex]] | filterMultiple:{provisioningStatus:['New','Pending','Changed']}" ng-include="'vlcTopCartHierarchy.html'"></div>
                        </section>
                        <section class="hcart-section">
                            <h3>{{::OmniCurrentSetup}}</h3>
                            <div class="topcartitems" ng-repeat="i in bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]][bpTree.pcItemsKey[vlcPC.pcIndex]] | filterMultiple:{provisioningStatus:['Active','Inactive']}" ng-include="'vlcTopCartHierarchy.html'"></div>
                        </section>
                    </div>
                </div>
            </div>
        </script>
        
        <script type="text/ng-template" id="vlcHKnowledge.html">
            <div class="horizontal-cart hide-md-screen vlc-knowledge-pc" ng-init="showCart = true;">
                <ng-include src="'vlcVKnowledgeAux.html'"/>
            </div>

            <!-- VERTICAL MINIKNOWLEDGE WIDGET-->
            <div class="cart vlc-knowledge-pc">
                <div class="panel panel-default">
                    <div class="panel-heading vlc-knowledge-heading">
                        <div class="head-item cart-toggle" ng-click="showCart = !showCart;">
                            <span class="vlc-knowledge-icon icon-v-document2-line pull-left vlc-knowledge-icon-h"></span>
                            <h3 class="panel-title pull-left">{{::vlcPC.label}}</h3>
                            <span class="toggle-icon pull-left" ng-class="{'icon-v-up-caret':showCart, 'icon-v-down-caret': !showCart}"></span>
                        </div>
                    </div>

                    <div class="panel-body" ng-show="showCart">
                        <h5 class="panel-title vlc-knoledge-cat" ng-if="kLabel = getKnowledgeDataCatLabel(bpTree.children[bpTree.asIndex], vlcPC)">{{kLabel}}</h5>
                        <div class="input-group input-search">
                            <input type="text" id='vlcKnowledgeKeyword' class="form-control" placeholder="{{::OmniScriptSearch}}" ng-model-options="{ updateOn: 'change blur' }" ng-model='bpTree.children[bpTree.asIndex].knowledgeKeyword' ng-enter='searchKnowledgeArticle(bpTree.children[bpTree.asIndex], true)'></input>
                            <div class="input-group-btn">
                                <button class="btn btn-link" ng-click='searchKnowledgeArticle(bpTree.children[bpTree.asIndex], true)'><i class="icon icon-v-search"></i></button>
                            </div> 
                        </div>
                        <div class="vlc-knowledge row" ng-repeat="i in bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]][bpTree.pcItemsKey[vlcPC.pcIndex]]">
                            <div class="col-md-12">
                                <!-- <h4 class="vlc-knowledge-title"><a href="/articles/{{i.aType}}/{{i.urlName}}" target="_blank">{{i.title}}</a>
                                    <i class="icon-v-expand-box vlc-icon-knowledge" ng-click='getArticleBody(bpTree.children[bpTree.asIndex], i)' data-placement="top" bs-tooltip='::OmniScriptOpen'></i>
                                    <i class="icon-v-modal vlc-icon-knowledge" ng-click='getArticleBody(bpTree.children[bpTree.asIndex], i, true)' data-placement="top" bs-tooltip='::OmniScriptModal'></i>
                                </h4> -->
                                <h4 class="vlc-knowledge-title"><a href ng-click='openArticleInConsole(i)'>{{i.title}}</a>
                                    <i class="icon-v-expand-box vlc-icon-knowledge" ng-click='getArticleBody(bpTree.children[bpTree.asIndex], i)' data-placement="top" bs-tooltip='::OmniScriptOpen'></i>
                                    <i class="icon-v-modal vlc-icon-knowledge" ng-click='getArticleBody(bpTree.children[bpTree.asIndex], i, true)' data-placement="top" bs-tooltip='::OmniScriptModal'></i>
                                </h4>                               
                            </div>
                            <div class="col-md-12">
                                <label class="item-name">{{i.summary}}</label>
                            </div>
                            <div class="col-md-12">
                                <label class="item-name vlc-knowledge-footer">{{i.displayType}} | {{::OmniScriptLastPublished}} {{i.lastPubDate}}</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </script>    

        <script type="text/ng-template" id="vlcHCart.html">
            <div class="horizontal-cart hide-md-screen" ng-init="showCart = false;setJSDataPreprocessor(vlcPC, baseCtrl.createCartHierarchy)">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <div class="head-item cart-toggle" ng-click="showCart = !showCart;">
                            <span class="cart-icon icon-v-cart-line"></span>
                            <h3 class="panel-title">{{::vlcPC.label}}</h3>
                            <span class="toggle-icon" ng-class="{'icon-v-up-caret':showCart, 'icon-v-down-caret': !showCart}"></span>
                        </div>
                        <div class="head-item">
                            <label>{{::OmniOneTime}}</label>
                            <h4>{{bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].OneTimeSum | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }} &nbsp;</h4>
                        </div>
                        <div class="head-item">
                            <label>{{::OmniMonthly}}</label>
                            <h4>{{bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].RecurringSum | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }} &nbsp;</h4>
                        </div>
                        <!--
                        <div class="head-item padding0">
                            <button class="btn btn-primary">Continue</button>
                        </div>
                        -->
                    </div>
                    <div class="panel-body" ng-show="showCart">
                        <section class="hcart-section">
                            <h3>{{::vlcPC.label}}</h3>
                            <div class="topcartitems" ng-repeat="i in bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]][bpTree.pcItemsKey[vlcPC.pcIndex]] | filterMultiple:{provisioningStatus:['New','Pending','Changed']}" ng-include="'vlcTopCartHierarchy.html'"></div>
                        </section>
                        <section class="hcart-section">
                            <h3>{{::OmniCurrentSetup}}</h3>
                            <div class="topcartitems" ng-repeat="i in bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]][bpTree.pcItemsKey[vlcPC.pcIndex]] | filterMultiple:{provisioningStatus:['Active','Inactive']}" ng-include="'vlcTopCartHierarchy.html'"></div>
                        </section>
                    </div>
                </div>
            </div>

            <!-- VERTICAL MINICART-->
            <div class="cart">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h3 class="panel-title">{{::vlcPC.label}}</h3>
                    </div>

                    <div class="panel-body vlc-ver-mini-panel-body">
                        <div class="item row" ng-repeat="i in bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]][bpTree.pcItemsKey[vlcPC.pcIndex]] | filterMultiple:{provisioningStatus:['New','Pending','Changed']}"  ng-include="'vlcCartHierarchy.html'"></div>
                    </div>

                    <div class="panel-heading">
                        <h3 class="panel-title">{{::OmniCurrentSetup}}</h3>
                    </div>

                    <div class="panel-body vlc-ver-mini-panel-body">
                        <div class="item row" ng-repeat="i in bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]][bpTree.pcItemsKey[vlcPC.pcIndex]] | filterMultiple:{provisioningStatus:['Active','Inactive']}" ng-include="'vlcCartHierarchy.html'"></div>
                    </div>

                    <div class="panel-body border-top">
                        <div class="totals row">
                            <h4 class="totals-title col-md-7">{{::OmniOneTime}} </h4>
                            <h4 class="col-md-5 cost pull-right">
                                {{bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].OneTimeSum | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}
                            </h4>
                        </div>
                        <div class="totals row">
                            <h4 class="totals-title col-md-7">{{::OmniMonthly}} </h4>
                            <h4 class="col-md-5 cost pull-right">
                                {{bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].RecurringSum | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}
                            </h4>
                        </div>
                    </div>
                </div>
            </div>
        </script>
        
        <script type="text/ng-template" id="vlcCartHierarchy.html">
            <div class="vcart-items">
                <div class="cart-icon-pointer">
                    <span ng-if="(i.isExpanded && i.cartItems !== undefined)">
                        <a ng-click="i.isExpanded = !i.isExpanded"><span class="glyphicon icon-v-down-arrow"></span></a>
                    </span>
                    <span ng-if="(!i.isExpanded && i.cartItems !== undefined)">
                        <a ng-click="i.isExpanded = !i.isExpanded"><span class="glyphicon icon-v-right-arrow"></span></a>
                    </span>
                </div>
                <div class="col-md-8 vcart-label-box">
                    <label class="item-name">{{i.itemSObject.PricebookEntry.Product2.Name}}
                    </label>
                    <p><label>{{::OmniOneTime}}</label> {{i.itemSObject[nsPrefix + 'OneTimeTotal__c'] | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}</p>
                    <p><label>{{::OmniMonthly}}</label> {{i.itemSObject[nsPrefix + 'RecurringTotal__c'] | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}</p>
                    <span class = 'vlocity-error vlocity-error-cart' ng-repeat="e in i.errors">
                        {{e}}
                    </span>
                </div>
                <div class="quantity col-md-3 vcart-quantity">
                    <span>x</span>
                    <input type="number" name="quantity" class="vcart-quantity" min='0' step="1" ng-model="i.itemSObject.Quantity" ng-change="pcAction(vlcPC.pcIndex, bpTree, this, i, 'Update')"/>
                    <!--
                    <input type="number" name="quantity" min='0' step="1" ng-model="i.itemSObject.Quantity" ng-disabled="true"/>
                    -->
                   <div class="vlc-prod-conf-setting">
                        <span class="icon icon-v-trash" ng-click="pcAction(vlcPC.pcIndex, bpTree, this, i, 'Delete')"></span>
                        <span class="vlc-prod-span-setting"><span  ng-if="i.isRoot && i.isConfigurable" class="glyphicon icon-v-setting" ng-click="configureItem(bpTree, null, this, i, 'configureProdInCart', baseCtrl.customHandleSelectedItem, baseCtrl.customIsConfigurable, vlcPC.pcIndex)"></span></span>
                   </div>
                </div>
            </div>
            <div ng-if ="i.cartItems !== undefined" class="vcart-child-items" collapse="!(i.isExpanded)">
                <div class="item row" id="dummy"></div>
                <div class="item row" ng-repeat="i in i.cartItems" ng-include="'vlcCartHierarchy.html'">
            </div>
        </script>        

        <script type="text/ng-template" id="vlcCartSummary.html">
        <div ng-repeat="vlcPC in ::bpTree.propSetMap.persistentComponent" ng-if="::vlcPC.id=='vlcCart'">
            <div class="cart-summary">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <span class="icon icon-v-cart-line"></span>
                        <h3 class="panel-title">{{::vlcPC.label}}</h3>
                        <div class="box"></div>
                        <!--
                        <button class="btn btn-primary">CHECKOUT</button>
                        -->
                    </div>

                    <div class="panel-body">

                    <section>
                        <h3>{{::OmniYourSelections}}</h3>
                        <div class="item row" ng-repeat="i in bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]][bpTree.pcItemsKey[vlcPC.pcIndex]] | filterMultiple:{provisioningStatus:['New','Pending']}">
                            <div class="col-md-4 col-sm-4">
                                <label class="item-name">{{i.itemSObject.PricebookEntry.Product2.Name}}</label>
                            </div>
                            <div class="quantity col-md-2 col-sm-2">
                                <span>x</span>
                                <input type="number" disabled="true" name="quantity" step="1" ng-model="i.itemSObject.Quantity"/>
                            </div>
                            <div class="field col-md-3 col-sm-3">
                                <label class="field-label">{{::OmniOneTime}}</label>
                                <p>
                                    <span class="price old-price color-black" ng-show="i.itemSObject[nsPrefix + 'OneTimeCharge__c'] > i.itemSObject[nsPrefix + 'OneTimeTotal__c']">
                                        {{i.itemSObject[nsPrefix + 'OneTimeCharge__c'] | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}
                                    </span>
                                    <span class="price color-black" ng-class="{'new-price':i.itemSObject[nsPrefix + 'OneTimeCharge__c'] > i.itemSObject[nsPrefix + 'OneTimeTotal__c']}">
                                    {{i.itemSObject[nsPrefix + 'OneTimeTotal__c'] | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}
                                    </span>
                                </p>
                            </div>
                            <div class="field col-md-3 col-sm-3">
                                <label class="field-label">{{::OmniMonthly}}</label>
                                <p>
                                    <span class="price old-price color-black" ng-show="i.itemSObject[nsPrefix + 'RecurringCharge__c'] > i.itemSObject[nsPrefix + 'RecurringTotal__c']">
                                        {{i.itemSObject[nsPrefix + 'RecurringCharge__c'] | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}
                                    </span>
                                    <span class="price color-black" ng-class="{'new-price':i.itemSObject[nsPrefix + 'RecurringCharge__c'] > i.itemSObject[nsPrefix + 'RecurringTotal__c']}">
                                    {{i.itemSObject[nsPrefix + 'RecurringTotal__c'] | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}
                                    </span>
                                </p>
                            </div>
                        </div>
                    </section>
                    <section>
                        <h3>{{::OmniCurrentSetup}}</h3>
                        <div class="item row" ng-repeat="i in bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]][bpTree.pcItemsKey[vlcPC.pcIndex]] | filterMultiple:{provisioningStatus:['Active','Inactive']}">
                            <div class="col-md-4 col-sm-4">
                                <label class="item-name">{{i.itemSObject.PricebookEntry.Product2.Name}}</label>
                            </div>
                            <div class=" quantity col-md-2 col-sm-2">
                                <span>x</span>
                                <input type="number" disabled="true" name="quantity" step="1" ng-model="i.itemSObject.Quantity"/>
                            </div>
                            <div class="field col-md-3 col-sm-3">
                                <label class="field-label">{{::OmniOneTime}}</label>
                                <p>{{i.itemSObject[nsPrefix + 'OneTimeTotal__c'] | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}</p>
                            </div>
                            <div class="field col-md-3 col-sm-3">
                                <label class="field-label">{{::OmniMonthly}}</label>
                                <p>{{i.itemSObject[nsPrefix + 'RecurringTotal__c'] | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}</p>
                            </div>
                        </div>
                    </section>
                    <section>
                        <div class="totals row">
                            <h4 class="col-md-6 col-sm-6"></h4>
                            <div class="cost col-md-3 col-sm-3">
                                <label class="totals-title">{{::OmniOneTime}}</label>
                                <h4 class="">{{bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].OneTimeSum | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}</h4>
                            </div>
                            <div class="cost col-md-3 col-sm-3">
                                <label class="totals-title">{{::OmniMonthly}}</label>
                                <h4 class="">{{bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].RecurringSum | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}</h4>
                            </div>
                        </div>
                    </section>
                    </div>
                    <!--
                    <div class="panel-footer">
                        <button class="btn btn-primary">CHECKOUT</button>
                    </div>
                    -->
                </div
            </div>
        </div>
        </script>

        <script type="text/ng-template" id="vlcSelectableItem.html">
            <h2>{{::control.propSetMap.label}}</h2>
            <!-- <button ng-if='control.vlcSI && control.vlcSI[control.itemsKey] && control.vlcSI[control.itemsKey].length > 0' ng-click='openModal(this, control)'>Compare</button> -->
            <br/>
            <div class="selecteableItem" ng-repeat='p in control.vlcSI[control.itemsKey]'>
                <div class="row result-box " ng-class="{'selected':p.added}">
                    <!-- <input class='vlc-compare-check' type="checkbox" ng-model='p.vlcCompSelected' ng-change="onCompSelectItem(control)" ng-disabled="control.compDisable && !p.vlcCompSelected"/> -->
                    <div class="img-container padding0">
                        <img ng-if="p.Image" src="../servlet/servlet.FileDownload?file={{p.Image}}"/>
                    </div>

                    <div class="product-info padding0" >
                        <h3 class="title">{{p.Name}}</h3>
                        <p class="description">
                           {{p.Description}}
                        </p>
                        <!--
                        <span class="detail">MORE DETAIL <span class="icon-v-right-caret"></span></span>
                        -->
                    </div>

                     <div class="flex" id="vlocity-price">
                        <div>
                            <span class="col-xs-6 col-sm-6 padding0">
                                <h6>{{::OmniOneTime}}</h6>
                                <h2>{{p.OneTimeCost}}</h2>
                            </span>
                            <span class="col-xs-6 col-sm-6 padding0">
                                <h6>{{::OmniMonthly}}</h6>
                                <h2>{{p.MonthlyCost}}</h2>
                            </span>
                        </div>
                        <div class="item-actions">
                            <button class="btn btn-primary col-md-12" ng-if="!p.added" ng-click="buttonClick(bpTree.response, control, this, p, 'Add', baseCtrl.customHandleSelectedItem)">
                                {{::AddToCart}}
                            </button>
                            <button class="btn btn-success col-md-12" ng-if="p.added" ng-click="buttonClick(bpTree.response, control, this, p, 'Remove', baseCtrl.customHandleSelectedItem)">
                                <span class="icon icon-v-check"></span>
                            </button>
                            <!--
                            <div ng-if="p.comparable" class="compare-link">Add to Compare</div>
                            -->
                        </div>
                    </div>
               </div>
            </div>
        </script>

        <script type="text/ng-template" id="vlcSelectableItemV2.html">
            <h2>{{::control.propSetMap.label}}</h2>
            <!-- <button ng-if='control.vlcSI && control.vlcSI[control.itemsKey] && control.vlcSI[control.itemsKey].length > 0' ng-click='openModal(this, control)'>Compare</button> -->
            <br/>
            <div class="selecteableItem" ng-repeat='p in control.vlcSI[control.itemsKey]'>
                <div class="row result-box">
                    <!-- <input class='vlc-compare-check' type="checkbox" ng-model='p.vlcCompSelected' ng-change="onCompSelectItem(control)" ng-disabled="control.compDisable && !p.vlcCompSelected"/> -->
                    <div class="img-container padding0">
                        <img ng-if="p.Image" src="../servlet/servlet.FileDownload?file={{p.Image}}"/>
                    </div>

                    <div class="product-info padding0" >
                        <h3 class="title">{{p.Name}}</h3>
                        <p class="description">
                           {{p.Description}}
                        </p>
                        <!--
                        <span class="detail">MORE DETAIL <span class="icon-v-right-caret"></span></span>
                        -->
                    </div>

                     <div class="flex" id="vlocity-price">
                        <div>
                            <span class="col-xs-6 col-sm-6 padding0">
                                <h6>{{::OmniOneTime}}</h6>
                                <h2>{{p.OneTimeCost}}</h2>
                            </span>
                            <span class="col-xs-6 col-sm-6 padding0">
                                <h6>{{::OmniMonthly}}</h6>
                                <h2>{{p.MonthlyCost}}</h2>
                            </span>
                        </div>
                        <div class="item-actions" ng-init=" p.isConfigurable == true ? operation = 'configureProd' : operation = 'Add' ">
                            <!--
                            <button class="btn btn-primary col-md-12" ng-click="buttonClick(bpTree.response, control, this, p, 'Add', baseCtrl.customHandleSelectedItem)">
                                {{::AddToCart}}
                            </button>
                            <div ng-if="p.comparable" class="compare-link">Add to Compare</div>
                            -->
                            <button class="btn btn-primary col-md-12" ng-click="configureItem(bpTree.response, control, this, p, operation, baseCtrl.customHandleSelectedItem, baseCtrl.customIsConfigurable)">
                                {{::AddToCart}}
                            </button>
                        </div>
                    </div>
               </div>
            </div>
        </script>

        <script type="text/ng-template" id="vlcSelectableItems.html">
            <div ng-repeat='control in child.eleArray' id='{{::control.name}}'>
                <ng-include class='col-md-12' ng-if='ngInitValidation(this, control)' src='::control.propSetMap.HTMLTemplateId'/>
            </div>
        </script>
        
        <script type="text/ng-template" id="vlcInputBlock.html">
            <div ng-repeat='control in child.eleArray' id='{{::control.name}}'>
                <ng-include class='col-md-12' ng-if='ngInitValidation(this, control)' src='::control.propSetMap.HTMLTemplateId'/>
            </div>
        </script>    
        
        <script type="text/ng-template" id="vlcTableSample.html">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <label>{{::control.propSetMap.label}}</label>
                </div>
                <table class="table">
                   <thead>
                        <tr>
                            <th>field1</th>
                            <th>field2</th>
                            <th>field3</th>
                        </tr>
                    </thead>
                    <tbody class="upgrade-tbody-omni">
                        <tr ng-repeat='p in control.vlcInputBlock.fieldArray' >
                            <td><input type='text' ng-model='p.field1'/></td>
                            <td><input type='text' ng-model='p.field2'/></td>
                            <td><input type='text' ng-model='p.field3'/></td>
                        </tr>
                    </tbody>
                </table>
                <div class="upgrade-btn">
                    <button class="btn btn-primary" ng-click="buttonClick(bpTree.response, control, this, control.vlcInputBlock, 'Save', callBackNextStep)" >Save & Next</button>
                </div>
            </div>
        </script>            

        <script type="text/ng-template" id="vlcModalContent.html">
            <div class="modal-header">
                <h3 class="modal-title">Item Comparison Sample</h3>
            </div>
            <div class="modal-body vlocity">
                <div class="panel panel-default">
                    <table class="table">
                       <thead>
                            <tr>
                                <th>Product Name</th>
                                <th>Feature</th>
                            </tr>
                        </thead>
                        <tbody class='ins'>
                            <tr ng-repeat='p in content.recSet'>
                                <td>{{p.ProductName}}</td>
                                <td>{{p.TermLifeMatrix__Rate}}
                                    <div ng-repeat="a in p.attributes | filterMultiple:{value:['True']}">{{a.name}}</div>
                                </td>
                            </tr>
                        </tbody>
                    </table>

                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-warning" ng-click="cancel()">OK</button>
            </div>
        </script>

        <script  type="text/ng-template" id="vlcSmallItems.html">
            <h2>{{::control.propSetMap.label}}</h2>
            <!-- <button ng-if='control.propSetMap.enableCompare && control.vlcSI && control.vlcSI[control.itemsKey] && control.vlcSI[control.itemsKey].length > 0' ng-click='openModal(this, control)'>Compare</button> -->
            <br/>
            <div class="small-list col-md-6" ng-repeat="p in control.vlcSI[control.itemsKey]">
                <div class="row result-box"  ng-class="{'selected': p.added}">
                    <!-- <input class='vlc-compare-check' type="checkbox" ng-model='p.vlcCompSelected' ng-change="onCompSelectItem(control)" ng-disabled="control.compDisable && !p.vlcCompSelected"/> -->
                    <div class="img-container padding0">
                        <img ng-if="p.Image" src="../servlet/servlet.FileDownload?file={{p.Image}}"/>
                    </div>

                    <div class="product-info padding0" >
                        <h3 class="title">{{p.Name}}</h3>
                        <p class="description">
                             {{p.Description}}
                        </p>
                    </div>

                    <div class="flex" id="vlocity-price">
                        <div>
                            <span class="col-sm-12 padding0">
                                <h6>{{::OmniOneTime}}</h6>
                                <h2>{{p.OneTimeCost}}</h2>
                            </span>
                        </div>
                    </div>
                    <div class="action">
                        <button class="btn btn-primary" ng-if="!p.added" ng-click="buttonClick(bpTree.response, control, this, p, 'Add', baseCtrl.customHandleSelectedItem)">
                            {{::AddToCart}}
                        </button>
                        <button class="btn btn-success" ng-if="p.added"  ng-click="buttonClick(bpTree.response, control, this, p, 'Remove', baseCtrl.customHandleSelectedItem)">
                            <span class="icon icon-v-check"></span>
                        </button>
                   </div>
               </div>
            </div>
        </script>

        <script  type="text/ng-template" id="vlcSmallItemsV2.html">
            <h2>{{::control.propSetMap.label}}</h2>
            <!-- <button ng-if='control.propSetMap.enableCompare && control.vlcSI && control.vlcSI[control.itemsKey] && control.vlcSI[control.itemsKey].length > 0' ng-click='openModal(this, control)'>Compare</button> -->
            <br/>
            <div class="small-list col-md-6" ng-repeat="p in control.vlcSI[control.itemsKey]">
                <div class="row result-box">
                    <!-- <input class='vlc-compare-check' type="checkbox" ng-model='p.vlcCompSelected' ng-change="onCompSelectItem(control)" ng-disabled="control.compDisable && !p.vlcCompSelected"/> -->
                    <div class="img-container padding0">
                        <img ng-if="p.Image" src="../servlet/servlet.FileDownload?file={{p.Image}}"/>
                    </div>

                    <div class="product-info padding0" >
                        <h3 class="title">{{p.Name}}</h3>
                        <p class="description">
                             {{p.Description}}
                        </p>
                    </div>

                    <div class="flex" id="vlocity-price">
                        <div>
                            <span class="col-sm-12 padding0">
                                <h6>{{::OmniOneTime}}</h6>
                                <h2>{{p.OneTimeCost}}</h2>
                            </span>
                        </div>
                    </div>
                    <div class="action" ng-init=" p.isConfigurable == true ? operation = 'configureProd' : operation = 'Add' ">
                        <button class="btn btn-primary col-md-12" ng-click="configureItem(bpTree.response, control, this, p, operation, baseCtrl.customHandleSelectedItem, baseCtrl.customIsConfigurable)">
                            {{::AddToCart}}
                        </button>
                   </div>
               </div>
            </div>
        </script>

        <script type="text/ng-template" id="vlcFilterItemSelect.html">
            <div class="filter-item" ng-repeat='control in child.eleArray'>
                <ng-form name='loopform' class='filter-item'>
                    <h3 class="filter-title">{{::control.propSetMap.label}} </h3>
                    <!--
                    <ul class="filter-inputs" ng-if="control.propSetMap.type === 'Radio'">
                        <li>
                            <label>
                               <input id='{{control.name}}' type='radio' ng-if='ngInitValidation(this, control)' ng-value='option.name' ng-model='control.response' ng-change='aggregate(this, control.index, control.indexInParent, true, -1)'/>
                                {{::option.value}}
                            </label>
                        </li>
                    </ul>
                    -->
                    <div class="filter-inputs">
                        <label class='select-label'>
                        <select id='{{::control.name}}' chainup name='loopname' ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' ng-model='control.response' class='form-control'  ng-options='option as option.value for option in getOptions(control) track by option.name'>
                            <option value="">{{::OmniClear}}</option>
                        </select>
                        </label>
                    </div>
                </ng-form>
            </div>
        </script>

        <script type="text/ng-template" id="vlcFilterItemMSelect.html">
            <div class="filter-item" ng-repeat='control in child.eleArray'>
                <ng-form name='loopform' class='filter-item'>
                    <h3 class="filter-title">{{::control.propSetMap.label}} </h3>
                    <ul class="filter-inputs" ng-if="::control.propSetMap.type ==='Multi-select'">
                        <li ng-repeat='option in getOptions(control) track by option.name'>
                            <label>
                                <input id='{{::control.name}}' name='loopname' ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' type='checkbox' ng-model='option.selected' ng-change='onMultiSelect(this, control, option)'/>
                                {{::option.value}}
                            </label>
                        </li>
                    </ul>
                </ng-form>
            </div>
        </script>

        <script type="text/ng-template" id="vlcFilterBlock.html">
            <div id='{{::control.name}}' ng-repeat='control in child.eleArray' class="filter-block col-md-12">
                <h2 ng-click="control.open = !control.open" ng-class="{'open': control.open === true}" style="cursor:pointer;">
                    {{::control.propSetMap.label}} <span ng-class="{'icon-v-up-caret':control.open, 'icon-v-down-caret': !control.open}"></span>
                </h2>
                <div ng-show='control.open' class="row">
                    <div ng-repeat='child in ::children = control.children' ng-if='!child.eleArray[0].propSetMap.show || evaluateShow(child.eleArray[0], this)'>
                        <child></child>
                    </div>
                    <button type="button" class="btn btn-primary" style="margin-top: 10px;" ng-disabled='false' ng-click='buttonClick(bpTree.response, control, this)'>
                        {{::control.propSetMap.buttonLabel}}
                    </button>
                </div>
            </div>
        </script>

        <!--NOTE: SideBar template is repeated in three places: vlcSideBar.html, bpTree.html, bpTreePreview.html-->
        <!--NOTE: need to modify three places-->
        <script type="text/ng-template" id="vlcSideBar.html">
            <div class='v-col-md-{{::12-bpW}} vlc-sidebar-instruction'>
                <div class="steps-chart">
                    <label class='vlc-sidebar-label'>{{::OmniSteps}}</label>

                    <div class="steps-container">
                        <div ng-repeat="step in ::children" ng-if="step.type === 'Step' && step.show" class='vlc-omni-step'>
                            <div>
                                <span class="icon icon-v-step-current active" aria-hidden="true" ng-if='step.bAccordionActive' ng-click='sidebarNav(step)'></span>
                                <span class="icon icon-v-step-prestine inactive" aria-hidden="true" ng-if='step.dirty === undefined || step.dirty === null' ng-click='sidebarNav(step)'></span>
                                <span class="icon icon-v-check-circle-line" aria-hidden="true" ng-if='step.dirty === true && step.tInvalid === false && !step.bAccordionActive' ng-click='sidebarNav(step)'></span>
                                <span class="icon icon-v-close-circle-line" aria-hidden="true" ng-if='step.dirty === true && step.tInvalid === true && !step.bAccordionActive' ng-click='sidebarNav(step)'></span>
                                <label class="step-label" ng-class='{"active":step.bAccordionActive, "inactive":step.dirty === undefined || step.dirty === null }'
                                    ng-click='sidebarNav(step)'>{{::step.propSetMap.label}}</label>
                                <div class="hr pull-right" ng-if='!$last'>
                                    <div class="line"></div>
                                </div>
                            </div>
                            <label class="step-label" ng-class='{"active":step.bAccordionActive, "inactive":step.dirty === undefined || step.dirty === null }'
                                ng-click='sidebarNav(step)'>{{::step.propSetMap.label}}</label>
                            <div class="step-connector" ng-if='!$last'></div>
                        </div>
                    </div>

                    <div class='vlc-sidebar-wrapper'>
                        <label class='vlc-sidebar-label' ng-if='bpTree.asIndex !== null && bpTree.children[bpTree.asIndex].propSetMap.instructionDisplay'>{{::OmniInstruction}}</label>
                        <div ng-repeat="step in ::children" ng-show="step.type === 'Step' && step.show && step.bAccordionActive && step.propSetMap.instruction">
                            <p ng-bind-html='::step.propSetMap.instructionDisplay'></p>
                        </div>
                    </div>
                </div>

                <div ng-if="bpTree.showPC">
                    <ng-include ng-repeat="vlcPC in ::bpTree.propSetMap.persistentComponent" ng-if='bpTree.showPCNew[vlcPC.pcIndex]' id='{{::vlcPC.id}}' src="::bpTree.dfHPSTmpl[vlcPC.pcIndex]"/>
                </div>
            </div>
        </script>

        <script type="text/ng-template" id="vlcBPTreeMain.html">
            <div class='v-col-md-{{::bpW}}'>
                <accordion close-others='bVert'>
                    <div ng-repeat='child in ::children = child.children' ng-if='(!child.propSetMap.show || evaluateShow(child, this))'><child></child></div>
                </accordion>
            </div>
        </script>

        <script type="text/ng-template" id="bpTree.html">
            <!--sidebar html-->
            <sidebar ng-if='children && children.length>0'></sidebar>

            <auto-saveforlater-msg ng-if='children && children.length>0'></auto-saveforlater-msg>
            <bptree ng-if='children && children.length>0'></bptree>
        </script>

        <script type="text/ng-template" id="bpTreePreview.html">
            <div id='debug-panel' class='panel panel-default'
                    ng-if="!isPreviewEmbedded">
                    <div class='panel-heading' ng-click='showDebugTabs = !showDebugTabs' style='padding:0;'>
                        <h5 class='pull-left'>Troubleshooting </h5>
                        <span class='pull-right' ng-class='{"icon-v-up-caret": showDebugTabs, "icon-v-down-caret": !showDebugTabs}'>
                        </span>
                    </div>
                    <div class='row' style='background-color: #969696; margin: 0;'>
                        <ul id='debug-tabs' ng-show='showDebugTabs'>
                            <li ng-repeat="tab in tabs"  ng-class="{active: isActiveTab(tab.page)}" ng-click="onClickTab(tab, $event);">{{tab.title}}</li>
                        </ul>
                    </div>
                    <div id="mainView" ng-class='{collapse: !showDebugTabs}'>
                        <div class='panel-body' style='height: 200px; overflow: auto;' ng-include="currentTab"></div>
                    </div>
            </div>

            <!--sidebar html-->
            <sidebar ng-if='children && children.length>0' >
            </sidebar>

            <auto-saveforlater-msg ng-if='children && children.length>0'></auto-saveforlater-msg>
            <bptree ng-if='children && children.length>0'>
            </bptree>

        </script>

        <script type="text/ng-template" id="previewLogs.html">
                <button class='btn btn-small btn-primary' ng-click='debugInformation = []' style='position:absolute; top:5px; right: 5px;'> Clear Logs</button>
                <div ng-repeat='info in debugInformation'>
                    <label style="font-weight:bold">{{info.label}}</label>
                    <div class='well'><json-formatter json="info.log"></json-formatter><div>
                </div>
        </script>

        <script type="text/ng-template" id="previewDR.html">
            <div class='row'>
                <div class='col-md-5'>
                    <label> Bundle Name </label>
                    <input type='text' class='form-control' ng-model='bundleName'></input>
                </div>
                <div class='col-md-5'>
                    <label> Context Id </label>
                    <input type='text' class='form-control' ng-model='ctxObjId'></input>
                </div>
                <div class='col-md-2'>
                    <div>&nbsp;</div>
                    <button class='btn btn-primary' ng-click='invokeDR(bundleName, ctxObjId)'> Fetch Data </button>
                </div>
            </div>
            <div class='row' style='padding-top: 5px;'>
                <div class='col-md-12 well'>
                    <json-formatter json="drInvokeResult"></json-formatter>
                </div>
            </div>
        </script>

        <script type="text/ng-template" id="previewSimulate.html">
               <div class='col-md-12'>
                    <label> Insert JSON <button class='btn btn-primary' ng-click='applyCallResp(testJSON)'> Apply </button></label>
                    <textarea class='form-control' ng-model='testJSON'></textarea>
                </div>
        </script>

        <script type="text/ng-template" id="previewApplication.html">
                <json-formatter json="bpTree.response"></json-formatter>
        </script>

        <script type="text/ng-template" id="xpreviewSimulate.html">
            <div class="popover" tabindex="-1" style="max-width: 600px">
              <div class="arrow"></div>
              <h3 class="popover-title" ng-bind-html="title" ng-show="title"></h3>
              <div class="popover-content">
                <div class='row'>
                    <div class='col-md-4'>
                        <label> Bundle Name </label>
                        <input type='text' class='form-control' ng-model='bundleName'></input>
                    </div>
                    <div class='col-md-4'>
                        <label> Context Id </label>
                        <input type='text' class='form-control' ng-model='ctxObjId'></input>
                    </div>
                    <div class='col-md-3'>
                        <div>&nbsp;</div>
                        <button class='btn btn-primary' ng-click='invokeDR(bundleName, ctxObjId)'>Fetch Data</button>
                    </div>
                </div>
                <div class='row' style='padding-top: 5px;'>
                    <div class='col-md-12 well'>
                        <json-formatter json="drInvokeResult"></json-formatter>
                    </div>
                </div>
              </div>
            </div>
        </script>

        <script type="text/ng-template" id="vlcBlock.html">
                <div ng-repeat='control in child.eleArray'>
                    <div id='{{::control.name}}' class='row-fluid'>
                        <div class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}} vlc-block-wrapper'>
                            <div class='vlc-block-heading'><span ng-if="$index === 0">{{::control.propSetMap.label}}</span>
                                <a ng-if='::control.propSetMap.repeat && control.ro !== true' class="btn btn-link pull-right" ng-click='baseCtrl.addItem(this, child, $index)'><i  class='icon vlc-plus icon-v-plus-line'></i>{{::OmniAddNew}} {{::control.propSetMap.label}}</a>
                            </div>
                            <div class='panel-body vlc-block-body'>
                                <div ng-repeat='child in ::children = control.children' ng-if='!child.eleArray[0].propSetMap.show || evaluateShow(child.eleArray[0], this)'>
                                    <child></child>
                                </div>
                            </div>
                            <div class="vlc-block-footer" ng-if='$index !==0' >
                                <a class="btn btn-link pull-right" ng-if='control.ro !== true' ng-click='removeItem(this, child, $index)'><i  class='icon vlc-minus icon-v-trash-line'></i>{{::OmniDelete}} {{::control.propSetMap.label}}</a>
                            </div>
                            <hr ng-if="child.eleArray.length > 1"/>
                        </div>
                    </div>
                </div>
        </script>

        <script type="text/ng-template" id="vlcValidation.html">
                <div ng-repeat='control in child.eleArray'>
                    <ng-form name='loopform' class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}} vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm }'>
                        <label class='field-label' ng-if='::!control.propSetMap.hideLabel'>{{::control.propSetMap.label}}
                        </label>
                        <input id='{{::control.name}}' type='text' name='loopname' ng-show='performValidate(this, control)' ng-model='control.response' class='form-control' readonly/>

                        <div class='vlc-validation-field' ng-repeat='msg in ::control.propSetMap.messages' ng-if='msg.active === true && control.response !== null && control.response === msg.value'>
                            <div class='vlc-validation-info' ng-if="msg.type === 'Comment' && control.displayMsg">
                                <i class='icon-v-information- vlc-error-input form-control-feedback'></i>
                                <small class='prop-error form-control-feedback'>{{control.displayMsg}}</small>
                            </div>
                            <div class='vlc-validation-success' ng-if="msg.type === 'Success' && control.displayMsg">
                                <i class='icon-v-check-circle vlc-error-input form-control-feedback'></i>
                                <small class='prop-error form-control-feedback'>{{control.displayMsg}}</small>
                            </div>
                            <div class='vlc-validation-warning' ng-if="msg.type === 'Warning' && control.displayMsg">
                                <i class='icon-v-claim vlc-error-input form-control-feedback'></i>
                                <small class='prop-error form-control-feedback'>{{control.displayMsg}}</small>
                            </div>
                            <div class='vlc-validation-error' ng-if="msg.type === 'Requirement' && control.displayMsg">
                                <i class='icon-v-close-circle vlc-error-input form-control-feedback'></i>
                                <small class='prop-error form-control-feedback'>{{control.displayMsg}}</small>
                            </div>
                        </div>

                    </ng-form>
                </div>
        </script>

        <script type="text/ng-template" id="vlcAutoSFLMsg.html">
            <div class='v-col-md-{{bpW}}'>
                <div ng-if='bpTree.resumeURL'>
                    <label class="vlc-auto-sfl-msg">{{::OmniScriptResumeLink}}
                        <a class='vlc-omni-copy' ng-click="copyToClipboard(OmniCopyToClipBoard, bpTree.resumeURL)">{{::OmniCopyLink}}</a> or
                        <a href="mailto:?subject=&body={{::OmniResumeLink}} %0D{{bpTree.resumeURL}}%0D%0D{{::OmniSaveEmailBody}}">{{::OmniEmailMe}}</a>
                    </label>
                </div>
            </div>
        </script>

        <script type="text/ng-template" id="vlcFormula.html">
                <div ng-repeat='control in child.eleArray'>
                    <ng-form name='loopform' class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}} vlc-form-group has-feedback is-disabled' ng-class='{ "has-success": validForm, "has-error": invalidForm }' ng-show="::!control.propSetMap.hide">
                        <label class='field-label'>{{::control.propSetMap.label}}
                        </label>
                        <input id='{{::control.name}}' type='text' name='loopname' ng-if="control.propSetMap.dataType != 'Number' && control.propSetMap.dataType != 'Date' && control.propSetMap.dataType != 'Currency' && performCalculation(this, control)" ng-model='control.response' class='form-control' readonly="readonly" disabled="disabled"/>

                        <div class='input-group' ng-if="::control.propSetMap.dataType == 'Currency'">
                            <span class='input-group-addon'>
                                <span>{{::control.propSetMap.currencySymbol}}</span>
                            </span>
                            <input id='{{::control.name}}' type='text' name='loopname' ng-if="performCalculation(this, control)" ng-model='control.response' class='form-control' via-mask='::control.propSetMap.mask' readonly="readonly" disabled="disabled" autocomplete="off" />
                        </div>

                        <div class='input-group' ng-if="::control.propSetMap.dataType == 'Date'">
                            <span class='input-group-addon'>
                                <i class='icon-v-calendar-line date-picker'></i>
                            </span>
                            <input id='{{::control.name}}' type='text' bs-datepicker ng-if='performCalculation(this, control)' class='form-control' ng-model='control.response' name='loopname' data-icon-left='icon-v-left-caret' data-icon-right='icon-v-right-caret' data-date-format='{{::control.propSetMap.dateFormat}}' data-date-type='date' data-placement='auto' data-autoclose='true' name='date' readonly="readonly" disabled="disabled" autocomplete="off" />
                        </div>

                        <input id='{{::control.name}}' type='text' name='loopname' ng-if="control.propSetMap.dataType == 'Number' && performCalculation(this, control)" ng-model='control.response' class='form-control' via-mask='::control.propSetMap.mask' readonly="readonly" disabled="disabled" autocomplete="off" />

                        <div class='vlc-sub-block'></div>
                    </ng-form>
                </div>
        </script>

        <script type="text/ng-template" id="vlcCheckbox.html">
                <div ng-repeat='control in child.eleArray'>
                    <ng-form name='loopform' class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}} vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm, "is-disabled": control.ro }'>
                        <i ng-click='removeItem(this, child, $index)' ng-if='$index !==0' class='vlc-minus icon-v-minus-circle'></i>
                        <label class='field-label'>{{::control.propSetMap.label}} <span class='form-control-feedback text-danger' ng-show='control.req'></span>
                            <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='::control.propSetMap.help' data-placement='right' bs-tooltip='::control.propSetMap.helpText'></i>
                            <i ng-if='::control.propSetMap.repeat' ng-click='baseCtrl.addItem(this, child, $index)' class='vlc-plus icon-v-plus-circle'></i>
                        </label>
                        <br>
                        <input id='{{::control.name}}' ng-disabled='control.ro' type='checkbox' name='loopname' class='vlc-checkbox-solo' ng-model='control.response' ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' ng-focus="resetSrvErr(control)" ng-change='aggregate(this, control.index, control.indexInParent, true, -1)'></input>
                        <label class='vlc-check-label'>{{::control.propSetMap.checkLabel}}</label>
                        <div class='vlc-sub-block' ng-include="'vlcErrorSubBlock.html'"></div>
                        {{validForm = (loopform.loopname.$valid && control.req && !control.srvErr);""}}
                        {{invalidForm = ((loopform.loopname.$invalid  && !control.req) || (loopform.loopname.$invalid && loopform.loopname.$dirty && control.req) || (control.srvErr));""}}
                    </ng-form>
                </div>
        </script>

        <script type="text/ng-template" id="vlcCurrency.html">
                <div ng-repeat='control in child.eleArray'>
                    <ng-form name='loopform' class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}} vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm, "is-disabled": control.ro }'>
                        <i ng-click='removeItem(this, child, $index)' ng-if='$index !==0' class='vlc-minus icon-v-minus-circle'></i>
                        <label class='field-label'>{{::control.propSetMap.label}} <span class='form-control-feedback text-danger' ng-show='control.req'></span>
                            <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='::control.propSetMap.help' data-placement='right' bs-tooltip='::control.propSetMap.helpText'></i>
                            <i ng-if='::control.propSetMap.repeat' ng-click='baseCtrl.addItem(this, child, $index)' class='vlc-plus icon-v-plus-circle'></i>
                        </label>
                        <div class='input-group'>
                            <span class='input-group-addon'>
                                <span>{{::control.propSetMap.currencySymbol}}</span>
                            </span>
                            <input id='{{::control.name}}' ng-blur='aggregate(this, control.index, control.indexInParent, true, -1)' ng-focus="resetSrvErr(control)" ng-disabled='control.ro' type='text' ui-number-mask='::control.propSetMap.mask' ui-negative-number='{{::control.propSetMap.allowNegative}}' ui-hide-group-sep='{{::control.propSetMap.hideGroupSep}}' min='::control.propSetMap.min' max='::control.propSetMap.max' name='loopname' ng-model='control.response' ng-model-options="{ updateOn: 'default focusout blur', debounce: { 'default': control.propSetMap.debounceValue, 'focusout': 0, 'blur': 0 } }" class='form-control vlc-currency' ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' ng-required='control.req'/>
                        </div>
                        <div class='vlc-sub-block' ng-include="'vlcErrorSubBlock.html'"></div>
                        <!--set validity of the form -->
                        {{validForm = (loopform.loopname.$valid && control.req && !control.srvErr);""}}
                        {{invalidForm = ((loopform.loopname.$invalid  && !control.req) || (loopform.loopname.$invalid && loopform.loopname.$dirty && control.req) || (control.srvErr));""}}

                    </ng-form>
                </div>
        </script>

        <script type="text/ng-template" id="vlcErrorSubBlock.html">
            <div class='error-field' ng-show='control.srvErr'>
                <i class='icon-v-close-circle vlc-error-input form-control-feedback'></i>
                <small class='prop-error form-control-feedback'>{{control.srvErr}}</small>
            </div>
            <div class='error-field' ng-show='loopform.loopname.$error' ng-hide='loopform.loopname.$pristine'>
                <i class='icon-v-close-circle vlc-error-input form-control-feedback' ng-show='invalidForm'></i>
                <small ng-show='loopform.loopname.$error.minlength' class='prop-error form-control-feedback'>Minimum length of {{::control.propSetMap.minLength}}</small>
                <small ng-show='loopform.loopname.$error.maxlength' class='prop-error form-control-feedback'>Maximum length of {{::control.propSetMap.maxLength}}</small>
                <small ng-show='loopform.loopname.$error.min' class='prop-error form-control-feedback'>Minimum value {{::control.propSetMap.min}}</small>
                <small ng-show='loopform.loopname.$error.max' class='prop-error form-control-feedback'>Maximum value {{::control.propSetMap.max}}</small>
                <small ng-show='loopform.loopname.$error.required' class='prop-error form-control-feedback'>required</small>
                <small ng-show='loopform.loopname.$error.pattern' class='prop-error form-control-feedback'>{{::control.propSetMap.ptrnErrText}}</small>
            </div>
        </script>

        <script type="text/ng-template" id="vlcDate.html">
                <div ng-repeat='control in child.eleArray'>
                    <ng-form name='loopform' class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}} vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm, "is-disabled": control.ro }'>
                        <i ng-click='removeItem(this, child, $index)' ng-if='$index !==0' class='vlc-minus icon-v-minus-circle'></i>
                        <label class='field-label'>{{::control.propSetMap.label}} <span class='form-control-feedback text-danger' ng-show='control.req'></span>
                            <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='::control.propSetMap.help' data-placement='right' bs-tooltip='::control.propSetMap.helpText'></i>
                            <i ng-if='::control.propSetMap.repeat' ng-click='baseCtrl.addItem(this, child, $index)' class='vlc-plus icon-v-plus-circle'></i>
                        </label>
                        <div class='input-group'>
                            <input id='{{::control.name}}' ng-disabled='control.ro' type='text'  ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' ng-focus="resetSrvErr(control)" ng-change='aggregate(this, control.index, control.indexInParent, true, -1)' class='form-control' ng-model='control.response' ng-required='control.req' name='loopname' data-icon-left='icon-v-left-caret' data-icon-right='icon-v-right-caret' data-date-format='{{::control.propSetMap.dateFormat}}' data-date-type='date' data-placement='auto' data-autoclose='true' name='date' bs-datepicker ng-if='ngInitValidation(this, control)' autocomplete="off"/>
                            <span class='input-group-addon'>
                                <i class='icon-v-calendar-line date-picker'></i>
                            </span>
                        </div>
                        <div class='vlc-sub-block' ng-include="'vlcErrorSubBlock.html'"></div>
                        {{validForm = (loopform.loopname.$valid && control.req && !control.srvErr);""}}
                        {{invalidForm = ((loopform.loopname.$invalid  && !control.req) || (loopform.loopname.$invalid && loopform.loopname.$dirty && control.req) || (control.srvErr));""}}
                    </ng-form>
                </div>
        </script>

        <script type="text/ng-template" id="vlcDatetime-local.html">
                <div ng-repeat='control in child.eleArray'>
                    <ng-form name='loopform' class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}} vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm, "is-disabled": control.ro }'>
                        <i ng-click='removeItem(this, child, $index)' ng-if='$index !==0' class='vlc-minus icon-v-minus-circle'></i>
                        <label class='field-label'>{{::control.propSetMap.label}} <span class='form-control-feedback text-danger' ng-show='control.req'></span>
                            <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='::control.propSetMap.help' data-placement='right' bs-tooltip='::control.propSetMap.helpText'></i>
                            <i ng-if='::control.propSetMap.repeat' ng-click='baseCtrl.addItem(this, child, $index)' class='vlc-plus icon-v-plus-circle'></i>
                        </label>
                        <div class='row'>
                            <div class='col-md-6 col-sm-6 col-xs-6 no-padding-left'>
                                <div class='input-group'>
                                    <input id='{{::control.name}}' ng-disabled='control.ro' type='text' name='loopname' ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' ng-focus="resetSrvErr(control)" ng-change='aggregate(this, control.index, control.indexInParent, true, -1)' class='form-control' ng-model='control.response' ng-required='control.req' data-icon-left='icon-v-left-caret' data-icon-right='icon-v-right-caret' data-date-format='{{::control.propSetMap.dateFormat}}' data-start-date="today" data-placement='auto' data-date-type='date' placeholder='Date' bs-datepicker  autocomplete="off"/>
                                    <span class='input-group-addon'>
                                        <i class='icon-v-calendar-line'></i>
                                    </span>
                                </div>
                            </div>
                            <div class='col-md-6 col-sm-6 col-xs-6  no-padding-right'>
                                <div class='input-group'>
                                    <input id='{{::control.name}}' ng-disabled='control.ro' type='text' name='loopname' ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' ng-focus="resetSrvErr(control)" ng-change='aggregate(this, control.index, control.indexInParent, true, -1)' data-time-type='date' class='form-control' data-icon-up='icon-v-up-caret' data-icon-down='icon-v-down-caret' data-start-date='Date.now()' ng-model='control.response' ng-required='control.req' data-autoclose='true' placeholder='Time' data-placement='auto' bs-timepicker  autocomplete="off"/>
                                    <span class='input-group-addon'>
                                        <i class='icon-v-time-line'></i>
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div class='vlc-sub-block' ng-include="'vlcErrorSubBlock.html'"></div>
                        {{validForm = (loopform.loopname.$valid && control.req && !control.srvErr);""}}
                        {{invalidForm = ((loopform.loopname.$invalid  && !control.req) || (loopform.loopname.$invalid && loopform.loopname.$dirty && control.req) || (control.srvErr));""}}
                    </ng-form>
                </div>
        </script>

        <script type="text/ng-template" id="vlcDisclosure.html">
                <div ng-repeat='control in child.eleArray'>
                    <ng-form name='loopform' class='col-xs-12 col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}} vlc-disclosure vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm, "is-disabled": control.ro }'>
                        <div class="well well-lg">
                            <label class='field-label' >{{::control.propSetMap.label}} <span class='form-control-feedback text-danger' ng-show='control.req'></span></label>
                            <hr/>
                            <p>{{::control.propSetMap.text}}</p>
                            <hr/>
                            <input id='{{::control.name}}' ng-disabled='control.ro' type='checkbox' name='loopname' ng-model='control.response' ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' ng-required='control.req' ng-focus="resetSrvErr(control)" ng-change='aggregate(this, control.index, control.indexInParent, true, -1)'></input>
                            <label class='vlc-check-label'>{{::control.propSetMap.checkLabel}}</label>
                            <div class='vlc-sub-block' ng-include="'vlcErrorSubBlock.html'"></div>
                            {{validForm = (loopform.loopname.$valid && control.req && !control.srvErr);""}}
                            {{invalidForm = ((loopform.loopname.$invalid  && !control.req) || (loopform.loopname.$invalid && loopform.loopname.$dirty && control.req) || (control.srvErr));""}}
                        </div>
                    </ng-form>
                </div>
        </script>

        <script type="text/ng-template" id="vlcDoneAction.html">
            <div id='{{::child.name}}' class="panel panel-default">
            </div>
        </script>

        <script type="text/ng-template" id="vlcDoneActionBtn.html">
                <div ng-repeat='control in child.eleArray'>
                    <div class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}} vlc-no-label'>
                        <!-- <button class='form-control btn btn-primary' ng-class="{ 'vlc-inactive': !control.active }" ng-disabled='checkValidity(this, control.index, control.indexInParent, control.propSetMap.validationRequired)' ng-click='buttonClick(this.bpTree, control, this)'>{{::control.propSetMap.label}}</button> -->
                        <button class='form-control btn btn-primary btn-ellipsis' ng-class="{ 'vlc-inactive': false }" title='{{::control.propSetMap.label}}' ng-click='buttonClick(this.bpTree, control, this)'>{{::control.propSetMap.label}}</button>
                    </div>
                </div>
        </script>

        <script type="text/ng-template" id="vlcEmail.html">
                <div ng-repeat='control in child.eleArray'>
                    <ng-form name='loopform' class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}} vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm, "is-disabled": control.ro }'>
                        <i ng-click='removeItem(this, child, $index)' ng-if='$index !==0' class='vlc-minus icon-v-minus-circle'></i>
                        <label class='field-label'>{{::control.propSetMap.label}} <span class='form-control-feedback text-danger' ng-show='control.req'></span>
                            <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='::control.propSetMap.help' data-placement='right' bs-tooltip='::control.propSetMap.helpText'></i>
                            <i ng-if='::control.propSetMap.repeat' ng-click='baseCtrl.addItem(this, child, $index)' class='vlc-plus icon-v-plus-circle'></i>
                        </label>
                        <input id='{{::control.name}}' ng-blur='aggregate(this, control.index, control.indexInParent, true, -1)' ng-focus="resetSrvErr(control)" type='email' ng-disabled='control.ro' name='loopname' ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' ng-model='control.response' ng-model-options="{ updateOn: 'default focusout blur', debounce: { 'default': control.propSetMap.debounceValue, 'focusout': 0, 'blur': 0 } }" class='form-control' ng-pattern='/^[a-z0-9._-]+@[a-z0-9._-]+\.[a-z]{2,4}$/i' ng-required='control.req' ng-if='ngInitValidation(this, control)'/>
                        <div class='vlc-sub-block' ng-include="'vlcErrorSubBlock.html'"></div>
                        {{validForm = (loopform.loopname.$valid && control.req && !control.srvErr);""}}
                        {{invalidForm = ((loopform.loopname.$invalid  && !control.req) || (loopform.loopname.$invalid && loopform.loopname.$dirty && control.req) || (control.srvErr));""}}
                    </ng-form>
                </div>
        </script>

        <script type="text/ng-template" id="vlcFile.html">
                <div ng-repeat='control in child.eleArray'>
                    <ng-form name='loopform' class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}} vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm }'>
                        <label class='field-label'>{{::control.propSetMap.label}} <span class='form-control-feedback text-danger' ng-show='control.req'></span>
                            <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='::control.propSetMap.help' data-placement='right' bs-tooltip='::control.propSetMap.helpText'></i>
                        </label>
                        <input type='file' name='loopname' ng-model='control.response' class='form-control' multiple app-filereader>
                            <div ng-show='control.response.length'>
                                <div ng-repeat='file in control.response' class='vlc-file-preview'>
                                    <button ng-click='removeFile(this, control, $index)' ng-show='isFileRemovable(this, control, $index)' class="vlc-remove"><i class='icon icon-v-close'></i></button>
                                    <span>{{file.webkitRelativePath || file.filename}}</span> (
                                    <span ng-switch='file.size > 1024*1024'>
                                        <span ng-switch-when='true'>{{file.size / 1024 / 1024 | number:2}} MB</span>
                                        <span ng-switch-default>{{file.size / 1024 | number:2}} kB</span>
                                    </span>)
                                </div>
                            </div>
                        </input>
                        <div class='vlc-sub-block' ng-include="'vlcErrorSubBlock.html'"></div>
                        {{validForm = (loopform.loopname.$valid && control.req && !control.srvErr);""}}
                        {{invalidForm = ((loopform.loopname.$invalid  && !control.req) || (loopform.loopname.$invalid && loopform.loopname.$dirty && control.req) || (control.srvErr));""}}
                    </ng-form>
                </div>
        </script>

        <script type="text/ng-template" id="vlcHeadline.html">
                <div ng-repeat='control in child.eleArray'>
                    <div class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}} vlc-header'>
                        <h1 ng-bind-html='control.propSetMap.value' ng-if='refresh(control)'></h1>
                    </div>
                </div>
        </script>

        <script type="text/ng-template" id="vlcLookup.html">
                <div ng-repeat='control in child.eleArray'>
                    <ng-form name='loopform' class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}} vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm, "is-disabled": control.ro }'>
                        <i ng-click='removeItem(this, child, $index)' ng-if='$index !==0' class='vlc-minus icon-v-minus-circle'></i>
                        <label class='field-label'>{{::control.propSetMap.label}} <span class='form-control-feedback text-danger' ng-show='control.req'></span>
                            <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='::control.propSetMap.help' data-placement='right' bs-tooltip='::control.propSetMap.helpText'></i>
                            <i ng-if='::control.propSetMap.repeat' ng-click='baseCtrl.addItem(this, child, $index)' class='vlc-plus icon-v-plus-circle'></i>
                        </label>

                        <button id='{{::control.name}}' ng-disabled='control.ro' placeholder="{{::control.propSetMap.placeholder}}" ng-change='aggregate(this, control.index, control.indexInParent, true, -1)' name='loopname' ng-focus="resetSrvErr(control)" ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' ng-required='control.req' type="button" class="btn btn-default form-control vlc-lookup" ng-model="control.response" data-html="1" bs-options="option.name as option.value for option in control.propSetMap.options track by option.name" bs-select ng-click="getLookupOptions(control, this)"/>
                        <div class='vlc-sub-block' ng-include="'vlcErrorSubBlock.html'"></div>
                        {{validForm = (loopform.loopname.$valid && control.req && !control.srvErr);""}}
                        {{invalidForm = ((loopform.loopname.$invalid  && !control.req) || (loopform.loopname.$invalid && loopform.loopname.$dirty && control.req) || (control.srvErr));""}}
                    </ng-form>
                </div>
        </script>

        <script type="text/ng-template" id="vlcMulti-select.html">
                <div ng-repeat='control in child.eleArray'>
                    <ng-form name='loopform' class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}} vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm, "is-disabled": control.ro }'>
                        <i ng-click='removeItem(this, child, $index)' ng-if='$index !==0' class='vlc-minus icon-v-minus-circle'></i>
                        <label class='field-label'>{{::control.propSetMap.label}} <span class='form-control-feedback text-danger' ng-show='control.req'></span>
                            <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='::control.propSetMap.help' data-placement='right' bs-tooltip='::control.propSetMap.helpText'></i>
                            <i ng-if='::control.propSetMap.repeat' ng-click='baseCtrl.addItem(this, child, $index)' class='vlc-plus icon-v-plus-circle'></i>
                            <i class='icon-v-check-circle vlc-valid-input form-control-feedback'  style='position:inherit' ng-show='validForm'></i>
                            <i class='icon-v-close-circle vlc-error-input form-control-feedback' style='position:inherit' ng-show='invalidForm'></i>
                        </label>
                        <div class='error-field' ng-show='loopform.$error' ng-hide='loopform.$pristine' style='position:inherit'>
                            <small ng-show='loopform.$error.required' class='prop-error form-control-feedback'>required</small>
                        </div>
                        <div class='error-field' ng-show='control.srvErr' style='position:inherit'>
                            <small ng-show='control.srvErr' class='prop-error form-control-feedback'>{{control.srvErr}}</small>
                        </div>
                        <div ng-if='::control.propSetMap.horizontalMode' ng-include="'vlcHorMulti-selectItem.html'"></div>
                        <div ng-if='::!control.propSetMap.horizontalMode' ng-include="'vlcMulti-selectItem.html'"></div>
                        <div class='vlc-sub-block'></div>
                        {{validForm = (loopform.$valid && control.req && !control.srvErr);""}}
                        {{invalidForm = (loopform.$error.required || control.srvErr);""}}
                    </ng-form>
                </div>
        </script>

        <script type="text/ng-template" id="vlcMulti-selectItem.html">
            <div ng-repeat='option in getOptions(control) track by option.name'>
                <label class='checkbox-inline'>
                    <input id='{{::control.name}}' ng-disabled='control.ro' type='checkbox' ng-init='init(this, control, option)' ng-if='ngInitValidation(this, control)' ng-model='option.selected' ng-focus="resetSrvErr(control)" ng-change='onMultiSelect(this, control, option)'/>{{::option.value}}
                </label>
            </div>
        </script>

        <script type="text/ng-template" id="vlcHorMulti-selectItem.html">
            <div class="filter-block">
                <div class="filter-item vlc-ms-item">
                    <ul class="filter-inputs">
                        <li ng-repeat='option in getOptions(control) track by option.name'>
                            <label>
                                <input id='{{::control.name}}' ng-disabled='control.ro' type='checkbox' ng-init='init(this, control, option)' ng-if='ngInitValidation(this, control)' ng-model='option.selected' ng-focus="resetSrvErr(control)" ng-change='onMultiSelect(this, control, option)' /> {{::option.value}}
                            </label>
                        </li>
                    </ul>
                </div>
            </div>
        </script>

        <script type="text/ng-template" id="vlcNumber.html">
                <div ng-repeat='control in child.eleArray'>
                    <ng-form name='loopform' class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}} vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm, "is-disabled": control.ro }'>
                        <i ng-click='removeItem(this, child, $index)' ng-if='$index !==0' class='vlc-minus icon-v-minus-circle'></i>
                        <label class='field-label'>{{::control.propSetMap.label}} <span class='form-control-feedback text-danger' ng-show='control.req'></span>
                            <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='::control.propSetMap.help' data-placement='right' bs-tooltip='::control.propSetMap.helpText'></i>
                            <i ng-if='::control.propSetMap.repeat' ng-click='baseCtrl.addItem(this, child, $index)' class='vlc-plus icon-v-plus-circle'></i>
                        </label>
                        <input id='{{::control.name}}' ng-blur='aggregate(this, control.index, control.indexInParent, true, -1)' ng-focus="resetSrvErr(control)" type='text' ng-disabled='control.ro' name='loopname' ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' ng-model='control.response' ng-model-options="{ updateOn: 'default focusout blur', debounce: { 'default': control.propSetMap.debounceValue, 'focusout': 0, 'blur': 0 } }" class='form-control' ng-required='control.req' ng-maxlength='{{::control.propSetMap.maxLength}}' ng-pattern='::control.propSetMap.pattern' ng-minlength='{{::control.propSetMap.minLength}}' via-mask='::control.propSetMap.mask' autocomplete="off" />
                        <div class='vlc-sub-block' ng-include="'vlcErrorSubBlock.html'"></div>
                        {{validForm = (loopform.loopname.$valid && control.req && !control.srvErr);""}}
                        {{invalidForm = ((loopform.loopname.$invalid  && !control.req) || (loopform.loopname.$invalid && loopform.loopname.$dirty && control.req) || (control.srvErr));""}}
                    </ng-form>
                </div>
        </script>

        <script type="text/ng-template" id="vlcPassword.html">
                <div ng-repeat='control in child.eleArray'>
                    <ng-form name='loopform' class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}} vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm, "is-disabled": control.ro }'>
                        <i ng-click='removeItem(this, child, $index)' ng-if='$index !==0' class='vlc-minus icon-v-minus-circle'></i>
                        <label class='field-label'>{{::control.propSetMap.label}} <span class='form-control-feedback text-danger' ng-show='control.req'></span>
                            <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='::control.propSetMap.help' data-placement='right' bs-tooltip='::control.propSetMap.helpText'></i>
                            <i ng-if='::control.propSetMap.repeat' ng-click='baseCtrl.addItem(this, child, $index)' class='vlc-plus icon-v-plus-circle'></i>
                        </label>
                        <input id='{{::control.name}}' ng-blur='aggregate(this, control.index, control.indexInParent, true, -1)' ng-focus="resetSrvErr(control)" type='password' ng-disabled='control.ro' name='loopname' ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' ng-model='control.response' ng-model-options="{ updateOn: 'default focusout blur', debounce: { 'default': control.propSetMap.debounceValue, 'focusout': 0, 'blur': 0 } }" class='form-control' ng-required='control.req' ng-maxlength='{{::control.propSetMap.maxLength}}' ng-pattern='::control.propSetMap.pattern' ng-minlength='{{::control.propSetMap.minLength}}'/> 
                        <div class='vlc-sub-block' ng-include="'vlcErrorSubBlock.html'"></div>
                        {{validForm = (loopform.loopname.$valid && control.req && !control.srvErr);""}}
                        {{invalidForm = ((loopform.loopname.$invalid  && !control.req) || (loopform.loopname.$invalid && loopform.loopname.$dirty && control.req) || (control.srvErr));""}}
                    </ng-form>
                </div>
        </script>

        <script type="text/ng-template" id="vlcRadio.html">
                <div ng-repeat='control in child.eleArray'>
                    <ng-form name='loopform' class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}} vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm, "is-disabled": control.ro }'>
                        <i ng-click='removeItem(this, child, $index)' ng-if='$index !==0' class='vlc-minus icon-v-minus-circle'></i>
                        <label class='field-label'>{{::control.propSetMap.label}} <span class='form-control-feedback text-danger' ng-show='control.req'></span>
                            <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='::control.propSetMap.help' data-placement='right' bs-tooltip='::control.propSetMap.helpText'></i>
                            <i ng-show='::control.propSetMap.repeat' ng-click='baseCtrl.addItem(this, child, $index)' class='vlc-plus icon-v-plus-circle'></i>
                        </label>
                        <div class='error-field' ng-show='control.srvErr' style='position:inherit;'>
                            <small ng-show='control.srvErr' class='prop-error form-control-feedback'>{{control.srvErr}}</small>
                        </div>

                        <div ng-if='::control.propSetMap.horizontalMode' ng-include="'vlcHorRadioItem.html'"></div>
                        <div ng-if='::!control.propSetMap.horizontalMode' ng-include="'vlcRadioItem.html'"></div>
                        <div class='vlc-sub-block'></div>
                        {{validForm = (loopform.$valid && control.req && !control.srvErr);""}}
                        {{invalidForm = ((loopform.$invalid) || (loopform.$invalid && loopform.$dirty && control.req) || (control.srvErr));""}}
                    </ng-form>
                </div>
        </script>

        <script type="text/ng-template" id="vlcRadioItem.html">
            <div class='radio' ng-repeat='option in getOptions(control) track by option.name'>
                <label>
                    <input id='{{::control.name}}' ng-disabled='control.ro' type='radio' ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' ng-value='option.name' ng-model='control.response' ng-required='!control.response && control.req' ng-focus="resetSrvErr(control)" ng-change='aggregate(this, control.index, control.indexInParent, true, -1)'/>{{::option.value}}
                </label>
            </div>
        </script>

        <script type="text/ng-template" id="vlcHorRadioItem.html">
            <div class="filter-block">
                <div class="filter-item vlc-ms-item">
                    <ul class="filter-inputs">
                        <li ng-repeat='option in getOptions(control) track by option.name'>
                            <label>
                                <input id='{{::control.name}}' ng-disabled='control.ro' type='radio' ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' ng-value='option.name' ng-model='control.response' ng-required='!control.response && control.req' ng-focus="resetSrvErr(control)" ng-change='aggregate(this, control.index, control.indexInParent, true, -1)' /> {{::option.value}}
                            </label>
                        </li>
                    </ul>
                </div>
            </div>
        </script>

        <script type="text/ng-template" id="vlcRange.html">
                <div ng-repeat='control in child.eleArray'>
                    <ng-form name='loopform' class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}} vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm, "is-disabled": control.ro }'>
                        <i ng-click='removeItem(this, child, $index)' ng-if='$index !==0' class='vlc-minus icon-v-minus-circle'></i>
                        <label class='field-label'>{{::control.propSetMap.label}} <span class='form-control-feedback text-danger' ng-show='control.req'></span>
                            <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='::control.propSetMap.help' data-placement='right' bs-tooltip='::control.propSetMap.helpText'></i>
                            <i ng-if='::control.propSetMap.repeat' ng-click='baseCtrl.addItem(this, child, $index)' class='vlc-plus icon-v-plus-circle'></i>
                        </label>
                        <div class='range-block'>
                            <div class='range-high col-xs-1 col-sm-1' style='padding: 2px 5px; text-align:center;'>{{::control.propSetMap.rangeLow}}</div>
                            <div class='col-xs-9 col-sm-9' style='padding: 0; text-align:center;'>
                                <input id='{{::control.name}}' ranger chainup ng-focus="resetSrvErr(control)" type='range' ng-disabled='control.ro' ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' class='vlc-range-input' name='loopname' bs-tooltip='control.response' min='{{::control.propSetMap.rangeLow}}' max='{{::control.propSetMap.rangeHigh}}' ng-required='control.req' ng-model='control.response' value='control.response' style="width:100% !important;"></input>
                            </div>
                            <div class='range-low col-xs-1 col-sm-1' style='padding: 2px 5px; text-align:center;'>{{::control.propSetMap.rangeHigh}}</div>
                        </div>
                        <div class='vlc-sub-block' ng-include="'vlcErrorSubBlock.html'"></div>
                        {{validForm = (loopform.loopname.$valid && control.req && !control.srvErr);""}}
                        {{invalidForm = ((loopform.loopname.$invalid  && !control.req) || (loopform.loopname.$invalid && loopform.loopname.$dirty && control.req) || (control.srvErr));""}}
                    </ng-form>
                </div>
        </script>

        <script type="text/ng-template" id="vlcRemoteAction.html">
            <div id='{{::child.name}}' class="panel panel-default" ng-show='child.ui.show && child.ui.error'>
                <div class="vlc-message vlc-msg-error" ng-if='!loading && child.ui.error'>
                    <div class="panel-heading">
                        {{::child.propSetMap.label}} <label ng-if='child.ui.preTransform'>{{::OmniPreTransform}}</label> <label ng-if='child.ui.postTransform'>{{::OmniPostTransform}}</label>
                    </div>
                    <div class="panel-body">
                        <p class="list-group-item-text"><i class="icon-v-close-circle"></i>{{child.ui.errorMessage}}</p>
                    </div>
                    <div class="panel-footer">
                       <button type="button" class="btn btn-default btn-sm" ng-if='child.ui.error' confirmed-click='cancel()' ng-confirm-click='{{::child.propSetMap.failureAbortMessage}}'>{{::child.propSetMap.failureAbortLabel}}</button>
                       <button type="button" class="btn btn-default btn-sm" ng-if='child.ui.error && child.bHasNext' ng-click='nextRepeater(child.nextIndex, child.indexInParent)'>{{::child.propSetMap.failureNextLabel}}</button>
                    </div>
                </div>

                <div class="vlc-message vlc-msg-inprogress" ng-if='loading'>
                    <div class="panel-heading">
                        {{::child.propSetMap.label}} <label ng-if='child.ui.preTransform'>{{::OmniPreTransform}}</label> <label ng-if='child.ui.postTransform'>{{::OmniPostTransform}}</label>
                    </div>
                    <div class="panel-body">
                        <p class="list-group-item-text"></span>{{::child.propSetMap.inProgressMessage}}</p>
                    </div>
                </div>

                <div class="vlc-message vlc-msg-success" ng-if='!loading && !child.ui.error'>
                    <div class="panel-heading">
                        {{::child.propSetMap.label}} <label ng-if='child.ui.preTransform'>{{::OmniPreTransform}}</label> <label ng-if='child.ui.postTransform'>{{::OmniPostTransform}}</label>
                    </div>
                    <div class="panel-body">
                        <p class="list-group-item-text"><i class="icon-v-check-circle"></i>{{::child.propSetMap.postMessage}}</p>
                    </div>
                </div>

            </div>
        </script>
        
        <script type="text/ng-template" id="vlcSetValuesErrorsActionBtn.html">
                <div ng-repeat='control in child.eleArray' class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}}'>
                    <div class='vlc-no-label'>                       
                        <button class='form-control btn btn-primary btn-ellipsis' ng-class="{ 'vlc-inactive': false }" title='{{::control.propSetMap.label}}' ng-click='buttonClick(this.bpTree.response, control, this)'>{{::control.propSetMap.label}}</button>
                    </div>
                    <div class='vlc-sub-block'></div>
                </div>
        </script>        

        <script type="text/ng-template" id="vlcRemoteActionBtn.html">
                <div ng-repeat='control in child.eleArray' class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}}'>
                    <div class='vlc-no-label'>
                        <!-- <button class='form-control btn btn-primary' ng-class="{ 'vlc-inactive': !control.active }" ng-disabled='checkValidity(this, control.index, control.indexInParent, control.propSetMap.validationRequired)' ng-click='buttonClick(this.bpTree.response, control, this)'>{{::control.propSetMap.label}}</button> -->
                        <button class='form-control btn btn-primary btn-ellipsis' ng-class="{ 'vlc-inactive': false }" title='{{::control.propSetMap.label}}' ng-click='buttonClick(this.bpTree.response, control, this)'>{{::control.propSetMap.label}}</button>
                    </div>
                    <div class='vlc-sub-block'></div>
                </div>
        </script>

        <script type="text/ng-template" id="vlcRestActionBtn.html">
                <div ng-repeat='control in child.eleArray' class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}}'>
                    <div class='vlc-no-label'>
                        <!-- <button class='form-control btn btn-primary' ng-class="{ 'vlc-inactive': !control.active }" ng-disabled='checkValidity(this, control.index, control.indexInParent, control.propSetMap.validationRequired)' ng-click='buttonClick(this.bpTree.response, control, this)'>{{::control.propSetMap.label}}</button> -->
                        <button class='form-control btn btn-primary btn-ellipsis' ng-class="{ 'vlc-inactive': false }" title='{{::control.propSetMap.label}}' ng-click='buttonClick(this.bpTree.response, control, this)'>{{::control.propSetMap.label}}</button>
                    </div>
                    <div class='vlc-sub-block'></div>
                </div>
        </script>

        <script type="text/ng-template" id="vlcDRExtractActionBtn.html">
                <div ng-repeat='control in child.eleArray' class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}}'>
                    <div class='vlc-no-label'>
                        <!-- <button class='form-control btn btn-primary' ng-class="{ 'vlc-inactive': !control.active }" ng-disabled='checkValidity(this, control.index, control.indexInParent, control.propSetMap.validationRequired)' ng-click='buttonClick(null, control, this)'>{{::control.propSetMap.label}}</button> -->
                        <button class='form-control btn btn-primary btn-ellipsis' ng-class="{ 'vlc-inactive': false }" title='{{::control.propSetMap.label}}' ng-click='buttonClick(null, control, this)'>{{::control.propSetMap.label}}</button>
                    </div>
                    <div class='vlc-sub-block'></div>
                </div>
        </script>

        <script type="text/ng-template" id="vlcDRPostActionBtn.html">
                <div ng-repeat='control in child.eleArray' class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}}'>
                    <div class='vlc-no-label'>
                        <!-- <button class='form-control btn btn-primary' ng-class="{ 'vlc-inactive': !control.active }" ng-disabled='checkValidity(this, control.index, control.indexInParent, control.propSetMap.validationRequired)' ng-click='buttonClick(this.bpTree, control, this)'>{{::control.propSetMap.label}}</button> -->
                        <button class='form-control btn btn-primary btn-ellipsis' ng-class="{ 'vlc-inactive': false }" title='{{::control.propSetMap.label}}' ng-click='buttonClick(this.bpTree, control, this)'>{{::control.propSetMap.label}}</button>
                    </div>
                    <div class='vlc-sub-block'></div>
                </div>
        </script>

        <script type="text/ng-template" id="vlcObjectPostActionBtn.html">
                <div ng-repeat='control in child.eleArray' class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}}'>
                    <div class='vlc-no-label'>
                        <!-- <button class='form-control btn btn-primary' ng-class="{ 'vlc-inactive': !control.active }" ng-disabled='checkValidity(this, control.index, control.indexInParent, control.propSetMap.validationRequired)' ng-click='buttonClick(this.bpTree, control, this)'>{{::control.propSetMap.label}}</button> -->
                        <button class='form-control btn btn-primary btn-ellipsis' ng-class="{ 'vlc-inactive': false }" title='{{::control.propSetMap.label}}' ng-click='buttonClick(this.bpTree, control, this)'>{{::control.propSetMap.label}}</button>
                    </div>
                    <div class='vlc-sub-block'></div>
                </div>
        </script>

        <script type="text/ng-template" id="vlcReviewActionBtn.html">
                <div ng-repeat='control in child.eleArray' class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}}'>
                    <div class='vlc-no-label'>
                        <button class='form-control btn btn-primary btn-ellipsis' ng-class="{ 'vlc-inactive': false }" title='{{::control.propSetMap.label}}' ng-click='buttonClick(this.bpTree, control, this)'>{{::control.propSetMap.label}}</button>
                    </div>
                    <div class='vlc-sub-block'></div>
                </div>
        </script>

        <script type="text/ng-template" id="vlcMobileAccordionGroup.html">
            <div class='panel panel-oui'>
                <div class='panel-heading mobile-according-group' >
                    <span accordion-transclude='heading' ng-class='{"text-muted": isDisabled}'>{{heading}}</span>
                    <span class="icon icon-v-step-current active" aria-hidden="true" ng-if='step.bAccordionActive'></span>
                    <span class="icon icon-v-step-prestine inactive" aria-hidden="true" ng-if='step.dirty === undefined || step.dirty === null'></span>
                    <span class="icon icon-v-check-circle-line" aria-hidden="true" ng-if='step.dirty === true && step.tInvalid === false && !step.bAccordionActive'></span>
                    <span class="icon icon-v-close-circle-line" aria-hidden="true" ng-if='step.dirty === true && step.tInvalid === true && !step.bAccordionActive'></span>
                </div>
                <div class='panel-collapse panel-body' collapse='!isOpen'>
                    <div ng-transclude></div>
                </div>
            </div>
        </script>

        <script type="text/ng-template" id="vlcStep.html">
                <accordion-group id='{{::child.name}}' ng-show='((!bVert && child.bAccordionActive) || bVert)' is-open='child.open' is-disabled='!child.bAccordionActive' ng-class='{ active: child.bAccordionActive }' template-url='vlcAccordionGroup.html' step='child'>
                    <div>
                    <accordion-heading>
                        {{::child.propSetMap.label}}
                    </accordion-heading>
                    <form novalidate class='col-md-{{::child.propSetMap.controlWidth}} col-sm-{{::child.propSetMap.controlWidth}} form-horizontal' role='form' name='{{::bpTree.sOmniScriptId}}-{{$index}}' id='{{::bpTree.sOmniScriptId}}-{{$index}}'>
                        <div class='row'>
                            <div ng-repeat='child in ::children = child.children' ng-if='!child.eleArray[0].propSetMap.show || evaluateShow(child.eleArray[0], this)'>
                                <child></child>
                            </div>
                        </div>
                        <div class='row'>
                            <div class='vlc-cancel pull-left col-md-1 col-xs-12' ng-if='child.bAccordionActive'>
                                <a class='form-control btn btn-link' confirmed-click='cancel()' ng-confirm-click='{{::child.propSetMap.cancelMessage}}'>{{::child.propSetMap.cancelLabel}}</a>
                            </div>
                            <div class='vlc-sfl pull-left col-md-2 col-xs-12' ng-if='bpTree.propSetMap.allowSaveForLater && bpTree.scriptState !== "review" && child.bAccordionActive'>
                                <a class='form-control btn btn-link' confirmed-click='saveForLater(child)' ng-confirm-click='{{::child.propSetMap.saveMessage}}'>{{::child.propSetMap.saveLabel}}</a>
                            </div>
                            <div ng-show='!child.bHasNext' class='vlc-sfl pull-left col-md-2 col-xs-12' ng-if='bpTree.scriptState == "saveAndResume" && child.bAccordionActive'>
                                <a class='form-control btn btn-link' confirmed-click='completeScript(true)' ng-confirm-click='{{::child.propSetMap.completeMessage}}'>{{::child.propSetMap.completeLabel}}</a>
                            </div>

                            <div ng-show='child.bHasNext' class='col-md-{{::child.propSetMap.nextWidth}} col-sm-{{::child.propSetMap.nextWidth}} col-xs-12 vlc-next pull-right'>
                                 <button class='form-control btn btn-primary' ng-click='nextRepeater(child.nextIndex, child.indexInParent)' ng-class="{ 'vlc-primary-inactive': false }"
                                    ng-disabled='checkValidity(this, child.index, child.indexInParent, "Step", null, true)'>
                                    {{::child.propSetMap.nextLabel}}
                                </button>
                            </div>

                            <div ng-if='child.bHasPrevious' class='col-md-{{::child.propSetMap.previousWidth}} col-sm-{{::child.propSetMap.previousWidth}} col-xs-12 vlc-previous pull-right'>
                                <button class='form-control btn btn-default' ng-click='previous(this, child)'>{{::child.propSetMap.previousLabel}}</button>
                            </div>
                        </div>
                    </form>
                </accordion-group>
        </script>

        <script type="text/ng-template" id="vlcSelect.html">
                <div ng-repeat='control in child.eleArray'>
                    <ng-form name='loopform' class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}} vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm, "is-disabled": control.ro  }'>
                        <i ng-click='removeItem(this, child, $index)' ng-if='$index !==0' class='vlc-minus icon-v-minus-circle'></i>
                        <label class='field-label omni-select'>{{::control.propSetMap.label}} <span class='form-control-feedback text-danger' ng-show='control.req'></span>
                            <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='::control.propSetMap.help' data-placement='right' bs-tooltip='::control.propSetMap.helpText'></i>
                            <i ng-if='::control.propSetMap.repeat' ng-click='baseCtrl.addItem(this, child, $index)' class='vlc-plus icon-v-plus-circle'></i>
                        </label>
                        <label class='select-label'>
                        <select id='{{::control.name}}' ng-disabled='control.ro' chainup ng-focus="resetSrvErr(control)" name='loopname' ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' ng-model='control.response' class='form-control'  ng-required='control.req' ng-options='option as option.value for option in getOptions(control) track by option.name'>
                            <option value="">{{::OmniClear}}</option>
                        </select>
                        </label>

                        <div class='vlc-sub-block' ng-include="'vlcErrorSubBlock.html'"></div>
                        {{validForm = (loopform.loopname.$valid && control.req && !control.srvErr);""}}
                        {{invalidForm = ((loopform.loopname.$invalid  && !control.req) || (loopform.loopname.$invalid && loopform.loopname.$dirty && control.req) || (control.srvErr));""}}
                    </ng-form>
                </div>
        </script>

        <script type="text/ng-template" id="vlcSignature.html">
                <div ng-repeat='control in child.eleArray'>
                    <ng-form name='loopform' class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}} vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm, "is-disabled": control.ro  }'>
                        <i ng-click='removeItem(this, child, $index)' ng-if='$index !==0' class='vlc-minus icon-v-minus-circle'></i>
                        <label class='field-label'>{{::control.propSetMap.label}} <span class='form-control-feedback text-danger' ng-show='control.req'></span>
                            <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='::control.propSetMap.help' data-placement='right' bs-tooltip='::control.propSetMap.helpText'></i>
                            <i ng-if='::control.propSetMap.repeat' ng-click='baseCtrl.addItem(this, child, $index)' class='vlc-plus icon-v-plus-circle'></i>
                        </label>
                        <input id='{{::control.name}}' ng-blur='aggregate(this, control.index, control.indexInParent, true, -1)' ng-focus="resetSrvErr(control)" type='text' ng-disabled='control.ro' name='loopname' ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' ng-model='control.response' ng-model-options="{ updateOn: 'default focusout blur', debounce: { 'default': control.propSetMap.debounceValue, 'focusout': 0, 'blur': 0 } }" class='form-control vlc-handwriting' style='font-family: cursive !important;' ng-required='control.req'/>

                        <div class='vlc-sub-block' ng-include="'vlcErrorSubBlock.html'"></div>
                        {{validForm = (loopform.loopname.$valid && control.req && !control.srvErr);""}}
                        {{invalidForm = ((loopform.loopname.$invalid  && !control.req) || (loopform.loopname.$invalid && loopform.loopname.$dirty && control.req) || (control.srvErr));""}}
                    </ng-form>
                </div>
        </script>

        <script type="text/ng-template" id="vlcSubmit.html">
                <div ng-repeat='control in child.eleArray'>
                    <div class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}} vlc-submit'>
                        <!-- <button class='form-control btn btn-primary' ng-class="{ 'vlc-primary-inactive': !control.active }" ng-disabled='checkValidity(this, control.index, control.indexInParent, control.type)' ng-click='submit(control)'>{{::control.propSetMap.label}}</button> -->
                        <button class='form-control btn btn-primary btn-ellipsis' ng-class="{ 'vlc-primary-inactive': false }" title='{{::control.propSetMap.label}}' ng-click='submit(this, control)'>{{::control.propSetMap.label}}</button>
                    </div>
                </div>
        </script>

        <script type="text/ng-template" id="vlcGeolocation.html">
            <div class='col-md-12' ng-repeat='control in child.eleArray'>
                <i ng-click='getLocation(this, control)' class='icon-v-location vlc-geo'>{{::control.propSetMap.label}}</i>
                <br/>
                <leaflet ng-if='control.response' markers="control.response" center='control.center' class='vlc-gmap'></leaflet>
            </div>
        </script>

        <script type="text/ng-template" id="vlcTel.html">
                <div ng-repeat='control in child.eleArray'>
                    <ng-form name='loopform' class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}} vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm, "is-disabled": control.ro  } '>
                        <i ng-click='removeItem(this, child, $index)' ng-if='$index !==0' class='vlc-minus icon-v-minus-circle'></i>
                        <label class='field-label'>{{::control.propSetMap.label}} <span class='form-control-feedback text-danger' ng-show='control.req'></span>
                            <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='::control.propSetMap.help' data-placement='right' bs-tooltip='::control.propSetMap.helpText'></i>
                            <i ng-if='::control.propSetMap.repeat' ng-click='baseCtrl.addItem(this, child, $index)' class='vlc-plus icon-v-plus-circle'></i>
                        </label>
                        <input id='{{::control.name}}' ng-blur='aggregate(this, control.index, control.indexInParent, true, -1)' ng-focus="resetSrvErr(control)" type='tel' ng-disabled='control.ro' name='loopname' ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' ng-model='control.response' ng-model-options="{ updateOn: 'default focusout blur', debounce: { 'default': control.propSetMap.debounceValue, 'focusout': 0, 'blur': 0 } }" class='form-control' ui-mask='{{::control.propSetMap.mask}}' ng-required='control.req' ng-maxlength='{{::control.propSetMap.maxLength}}' ng-pattern='::control.propSetMap.pattern' ng-minlength='{{::control.propSetMap.minLength}}'/>

                        <div class='vlc-sub-block' ng-include="'vlcErrorSubBlock.html'"></div>
                        {{validForm = (loopform.loopname.$valid && control.req && !control.srvErr);""}}
                        {{invalidForm = ((loopform.loopname.$invalid  && !control.req) || (loopform.loopname.$invalid && loopform.loopname.$dirty && control.req) || (control.srvErr));""}}
                    </ng-form>
                </div>
        </script>

        <script type="text/ng-template" id="vlcText.html">
                <div ng-repeat='control in child.eleArray'>
                    <ng-form name='loopform' class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}} vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm, "is-disabled": control.ro  }'>
                        <i ng-click='removeItem(this, child, $index)' ng-if='$index !==0' class='vlc-minus icon-v-minus-circle'></i>
                        <label class='field-label'>{{::control.propSetMap.label}} <span class='form-control-feedback text-danger' ng-show='control.req'></span>
                            <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='::control.propSetMap.help' data-placement='right' bs-tooltip='::control.propSetMap.helpText'></i>
                            <i ng-if='::control.propSetMap.repeat' ng-click='baseCtrl.addItem(this, child, $index)' class='vlc-plus icon-v-plus-circle'></i>
                        </label>
                        <input id='{{::control.name}}' ng-focus="resetSrvErr(control)" type='text' ng-disabled='control.ro' name='loopname' ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' ng-model='control.response' ng-blur='aggregate(this, control.index, control.indexInParent, true, -1)' ng-model-options="{ updateOn: 'default focusout blur', debounce: { 'default': control.propSetMap.debounceValue, 'focusout': 0, 'blur': 0 } }" class='form-control' ui-mask='{{::control.propSetMap.mask}}' ng-required='control.req' ng-maxlength='{{::control.propSetMap.maxLength}}' ng-pattern='::control.propSetMap.pattern' ng-minlength='{{::control.propSetMap.minLength}}'/>

                        <div class='vlc-sub-block' ng-include="'vlcErrorSubBlock.html'"></div>
                        {{validForm = (loopform.loopname.$valid && control.req && !control.srvErr);""}}
                        {{invalidForm = ((loopform.loopname.$invalid  && !control.req) || (loopform.loopname.$invalid && loopform.loopname.$dirty && control.req) || (control.srvErr));""}}
                    </ng-form>
                </div>
        </script>

        <script type="text/ng-template" id="vlcTextarea.html">
                <div ng-repeat='control in child.eleArray'>
                    <ng-form name='loopform' class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}} vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm, "is-disabled": control.ro  }'>
                        <i ng-click='removeItem(this, child, $index)' ng-if='$index !==0' class='vlc-minus icon-v-minus-circle'></i>
                        <label class='field-label vlc-textarea-label'>{{::control.propSetMap.label}} <span class='form-control-feedback text-danger' ng-show='control.req'></span>
                            <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='::control.propSetMap.help' data-placement='right' bs-tooltip='::control.propSetMap.helpText'></i>
                            <i ng-if='::control.propSetMap.repeat' ng-click='baseCtrl.addItem(this, child, $index)' class='vlc-plus icon-v-plus-circle'></i>
                        </label>
                        <textarea id='{{::control.name}}' ng-blur='aggregate(this, control.index, control.indexInParent, true, -1)' ng-focus="resetSrvErr(control)" name='loopname' ng-disabled='control.ro' ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' ng-model='control.response' ng-model-options="{ updateOn: 'default focusout blur', debounce: { 'default': control.propSetMap.debounceValue, 'focusout': 0, 'blur': 0 } }" class='form-control' ng-required='control.req' ng-maxlength='{{::control.propSetMap.maxLength}}' ng-pattern='::control.propSetMap.pattern' ng-minlength='{{::control.propSetMap.minLength}}'></textarea>

                        <div class='vlc-sub-block' ng-include="'vlcErrorSubBlock.html'"></div>
                        {{validForm = (loopform.loopname.$valid && control.req && !control.srvErr);""}}
                        {{invalidForm = ((loopform.loopname.$invalid  && !control.req) || (loopform.loopname.$invalid && loopform.loopname.$dirty && control.req) || (control.srvErr));""}}
                    </ng-form>
                </div>
        </script>

        <script type="text/ng-template" id="vlcTextblock.html">
                <div ng-repeat='control in child.eleArray'>
                    <div class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}} vlc-textblock'>
                        <label class='field-label vlc-textblock-label'>{{::control.propSetMap.label}} <span class='form-control-feedback text-danger' ng-show='control.req'></span>
                            <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='::control.propSetMap.help' data-placement='right' bs-tooltip='::control.propSetMap.helpText'></i>
                        </label>
                        <div class='vlc-textblock-text'>
                            <p ng-bind-html='control.propSetMap.value' ng-if='refresh(control)'></p>
                        </div>
                    </div>
                </div>
        </script>

        <script type="text/ng-template" id="vlcTime.html">
                <div ng-repeat='control in child.eleArray'>
                    <ng-form name='loopform' class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}} vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm, "is-disabled": control.ro  }'>
                        <i ng-click='removeItem(this, child, $index)' ng-if='$index !==0' class='vlc-minus icon-v-minus-circle'></i>
                        <label class='field-label'>{{::control.propSetMap.label}} <span class='form-control-feedback text-danger' ng-show='control.req'></span>
                            <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='::control.propSetMap.help' data-placement='right' bs-tooltip='::control.propSetMap.helpText'></i>
                            <i ng-if='::control.propSetMap.repeat' ng-click='baseCtrl.addItem(this, child, $index)' class='vlc-plus icon-v-plus-circle'></i>
                        </label>
                        <div class='input-group'>
                            <input id='{{::control.name}}' type='text' ng-disabled='control.ro' name='loopname' ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' ng-focus="resetSrvErr(control)" ng-change='aggregate(this, control.index, control.indexInParent, true, -1)' data-time-type='date' class='form-control' data-icon-up='icon-v-up-caret' data-icon-down='icon-v-down-caret' data-start-date='Date.now()' ng-model='control.response' ng-required='control.req' data-autoclose='true' placeholder='Time' data-placement='auto' bs-timepicker  autocomplete="off"/>
                            <span class='input-group-addon'>
                                <i class='icon-v-time-line'></i>
                            </span>
                        </div>

                        <div class='vlc-sub-block' ng-include="'vlcErrorSubBlock.html'"></div>
                        {{validForm = (loopform.loopname.$valid && control.req && !control.srvErr);""}}
                        {{invalidForm = ((loopform.loopname.$invalid  && !control.req) || (loopform.loopname.$invalid && loopform.loopname.$dirty && control.req) || (control.srvErr));""}}
                    </ng-form>
                </div>
        </script>

        <script type="text/ng-template" id="vlcURL.html">
                <div ng-repeat='control in child.eleArray'>
                    <ng-form name='loopform' class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}} vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm, "is-disabled": control.ro  }'>
                        <i ng-click='removeItem(this, child, $index)' ng-if='$index !==0' class='vlc-minus icon-v-minus-circle'></i>
                        <label class='field-label'>{{::control.propSetMap.label}} <span class='form-control-feedback text-danger' ng-show='control.req'></span>
                            <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='::control.propSetMap.help' data-placement='right' bs-tooltip='::control.propSetMap.helpText'></i>
                            <i ng-if='::control.propSetMap.repeat' ng-click='baseCtrl.addItem(this, child, $index)' class='vlc-plus icon-v-plus-circle'></i>
                        </label>
                        <input id='{{::control.name}}' ng-blur='aggregate(this, control.index, control.indexInParent, true, -1)' ng-focus="resetSrvErr(control)" type='url' ng-disabled='control.ro' name='loopname' ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' ng-model='control.response' ng-model-options="{ updateOn: 'default focusout blur', debounce: { 'default': control.propSetMap.debounceValue, 'focusout': 0, 'blur': 0 } }" class='form-control' ng-required='control.req' ng-pattern='/^(ht|f)tps?:\/\/[a-z0-9-\.]+\.[a-z]{2,4}\/?([^\s<>\#%\,\{\}\\|\\\^\[\]`]+)?$/'/>

                        <div class='vlc-sub-block' ng-include="'vlcErrorSubBlock.html'"></div>
                        {{validForm = (loopform.loopname.$valid && control.req && !control.srvErr);""}}
                        {{invalidForm = ((loopform.loopname.$invalid  && !control.req) || (loopform.loopname.$invalid && loopform.loopname.$dirty && control.req) || (control.srvErr));""}}
                        </ng-form>
                    </div>
        </script>

        <script type="text/ng-template" id="vlcImage.html">
            <div ng-if='!child.eleArray[0].propSetMap.show || evaluateShow(child.eleArray[0], this)'>
                <div ng-repeat='control in child.eleArray'>
                    <ng-form name='loopform' class='col-md-{{::control.propSetMap.controlWidth}} col-sm-{{::control.propSetMap.controlWidth}} vlc-form-group'>
                        <label class='field-label' ng-class='{ active: control.req }'>{{::control.propSetMap.label}}
                            <i class='fa fa-question-circle vlc-question-tooltip' ng-show='::control.propSetMap.help' data-placement='right' bs-tooltip='::control.propSetMap.helpText'></i>
                        </label>
                        <input ng-if='::control.propSetMap.multiple' type='file' name='loopname' ng-model='control.response' class='form-control' app-filereader multiple accept="image/*">
                            <div ng-if='control.propSetMap.multiple && control.response.length'>
                                <div ng-include="'vlcImageAux.html'"></div>
                            </div>
                        </input>
                        <input ng-if='::!control.propSetMap.multiple' type='file' name='loopname' ng-model='control.response' class='form-control' app-filereader accept="image/*">
                            <div ng-if='!control.propSetMap.multiple && control.response.length'>
                                <div ng-include="'vlcImageAux.html'"></div>
                            </div>
                        </input>
                        <div class='vlc-sub-block' ng-include="'vlcErrorSubBlock.html'"></div>
                        {{validForm = (loopform.loopname.$valid && control.req && !control.srvErr);""}}
                        {{invalidForm = ((loopform.loopname.$invalid  && !control.req) || (loopform.loopname.$invalid && loopform.loopname.$dirty && control.req) || (control.srvErr));""}}
                    </ng-form>
                </div>
            </div>
        </script>

        <script type="text/ng-template" id="vlcImageAux.html">
            <div ng-repeat='file in control.response' class='vlc-image-preview'>
                <img ng-if="bpTree.filesMap[file.data] && bpTree.filesMap[file.data].substring(0,4) === 'data'" class="vlc-thumb" ng-src="{{bpTree.filesMap[file.data]}}" />
                <img ng-if="!bpTree.filesMap[file.data] || bpTree.filesMap[file.data].substring(0,4) !== 'data'" class="vlc-thumb" src="../servlet/servlet.FileDownload?file={{bpTree.filesMap[file.data]}}"/>
                <button ng-click='removeFile(this, control, $index)' ng-show='isFileRemovable(this, control, $index)' class='vlc-remove'>X</button>
                <span>{{file.webkitRelativePath || file.filename}}</span> (
                <span ng-switch='file.size > 1024*1024'>
                    <span ng-switch-when='true'>{{file.size / 1024 / 1024 | number:2}} MB</span>
                    <span ng-switch-default>{{file.size / 1024 | number:2}} kB</span>
                </span>)
            </div>
        </script>

       <!-- Insurance card template initiated from Manulife demo -->
       <script type="text/ng-template" id="vlcCardList.html">
            <h2>{{::control.propSetMap.label}}</h2>
            <button ng-if='control.vlcSI && control.vlcSI[control.itemsKey] && control.vlcSI[control.itemsKey].length > 0' ng-click='openModal(this, control)'>Compare</button>
            <br/>
            <section class="selectable" ng-repeat="p in control.vlcSI[control.itemsKey]" ng-class="{'vlc-selectableitem-selected' : p.vlcSelected}">
                <div class="top-container" ng-class="{'recommended': p.ProductRecommend}">
                    <input class='vlc-compare-check' type="checkbox" ng-model='p.vlcCompSelected' ng-change="onCompSelectItem(control)" ng-disabled="control.compDisable && !p.vlcCompSelected"/>
                    <h1>{{p.ProductName}}</h1>
                    <span class="subtotal">
                        <sup>$</sup>
                        <span class="num price-format">{{p.TotalPrice}}</span>
                        <span class="per">/ TRIP</span>
                    </span>
                    <button class="form-control" ng-click='onSelectItem(control, p, $index, this, true)'
                            ng-class="{'icon-v-check': p.vlcSelected}">Select Plan</button>
                </div>
                <div class="attributes-container">
                    <h3>Features</h3>
                    <ul class="included-attributes">
                        <li ng-repeat="a in p.attributes" ng-if="a.value==='True'">{{a.name}}</li>
                    </ul>
                    <ul class="specific-prices">
                        <li>
                            <strong>Adult Rate</strong>
                            <p>
                                <span>$</span>
                                <span class="price-format">{{p.AdultPrice}}</span> / day
                            </p>
                        </li>
                        <li>
                            <strong>Child Rate</strong>
                            <p>
                                <span>$</span>
                                <span class="price-format">{{p.ChildPrice}}</span> / day
                            </p>
                        </li>
                    </ul>
                </div>
            </section>
        </script>

        <script type="text/ng-template" id="vlcReviewAction.html">
            <div id='{{::child.name}}'>
            </div>
        </script>

        <script type="text/ng-template" id="vlcReviewActionFooter.html">
            <div class='col-sm-{{::bpTree.reviewAction.propSetMap.previousWidth}} vlc-back' ng-if='bpTree.reviewAction.bHasPrevious'><button class='form-control vlc-back' ng-click='navigate(bpTree, bpTree.reviewAction, "previous")'>{{::bpTree.reviewAction.propSetMap.previousLabel}}</button></div>
            <div class='col-sm-{{::bpTree.reviewAction.propSetMap.nextWidth}} vlc-submit' ng-if='bpTree.reviewAction.bHasNext'><button class='form-control btn btn-primary' ng-click='navigate(bpTree, bpTree.reviewAction, "next")'>{{::bpTree.reviewAction.propSetMap.nextLabel}}</button></div>
        </script>

        <script type="text/ng-template" id="vlcReviewActionBtnFooter.html">
            <div class='col-sm-{{::bpTree.reviewActionBtn.propSetMap.previousWidth}} vlc-back'><button class='form-control vlc-back' ng-click='navigateBackToStep(bpTree, bpTree.reviewActionBtn, bpTree.parentStepIndex)'>{{::bpTree.reviewActionBtn.propSetMap.previousLabel}}</button></div>
        </script>

        <script type="text/ng-template" id="vlcRedirectActionFooter.html">
            <div class='col-sm-{{::bpTree.redirectAction.propSetMap.redirectNextWidth}} vlc-submit' ng-if='bpTree.redirectAction.bHasNext'><button class='form-control btn btn-primary' ng-click='navigate(bpTree, bpTree.redirectAction, "next")'>{{::bpTree.redirectAction.propSetMap.redirectNextLabel}}</button></div>
        </script>

        <script type="text/ng-template" id="vlcRedirectActionBtnFooter.html">
            <div class='col-sm-{{::bpTree.redirectActionBtn.propSetMap.redirectPreviousWidth}} vlc-back'><button class='form-control vlc-back' ng-click='navigateBackToStep(bpTree, bpTree.redirectActionBtn, bpTree.parentStepIndex)'>{{::bpTree.redirectActionBtn.propSetMap.redirectPreviousLabel}}</button></div>
        </script>

        <script type="text/ng-template" id="vlcApplicationConfirmationV2.html">
            <div class='panel panel-default review'>
                <div class='panel-heading'>
                    {{::OmniSummary}}
                </div>
                <div class='panel-body'>
                    <json-tree json='bpTree.response' skipnodes='bpTree.skipElements' collapsed-level='2' labelmap="bpTree.labelMap"></json-tree>
                </div>
            </div>

            <hr/>

            <div class='panel panel-default review' ng-if="bpTree.previewMode">
                <div class='panel-heading'>{{::OmniDataJSON}}</div>
                <div class='panel-body'>
                    <span>{{bpTree.response | json}}</span>
                </div>
            </div>
        </script>

        <script type="text/ng-template" id="vlcApplicationConfirmation.html">
            <!--<div class='panel panel-default review'>
                <div class='panel-heading'>
                    {{::bpTree.submitButton.propSetMap.summaryLabel}}
                </div>
                <div class='panel-body'>

                </div>
            </div>-->
            <div class='col-md-12 review-body'>
                <json-tree json='bpTree.response' skipnodes='bpTree.skipElements' collapsed-level='2' labelmap="bpTree.labelMap"></json-tree>

                <div>
                <div class='col-sm-{{::bpTree.submitButton.propSetMap.submitWidth}} vlc-back'>
                    <button class='form-control vlc-back' ng-click='goBack(bpTree, bpTree.submitButton)'>{{::bpTree.submitButton.propSetMap.reviseLabel}}</button>
                </div>
                <div class='col-sm-{{::bpTree.submitButton.propSetMap.reviseWidth}} vlc-submit'>
                    <button class='form-control btn btn-primary' ng-click='apexrest(bpTree, bpTree.submitButton)'>{{::bpTree.submitButton.propSetMap.submitLabel}}</button>
                </div>
                </div>
            </div>

            <div class='panel panel-default review' ng-if="bpTree.previewMode" style="clear:both;">
                <div class='panel-heading'>{{::OmniDataJSON}}</div>
                <div class='panel-body'>
                    <json-formatter json="bpTree.response"></json-formatter>
                </div>
            </div>
        </script>

        <script type="text/ng-template" id="vlcApplicationAcknowledge.html">
             <div class='panel panel-default review'>
                 <div class='panel-heading'>
                     {{::OmniCallResult}}
                 </div>
                 <div class='panel-body'>
                     <label ng-if="response.CallSuccess">{{::OmniApplicationAcknowledge}} {{response.applicationRefNumber}}.</label>
                     <label ng-if="!response.CallSuccess">{{response.responseText}}</label>
                     <label ng-if="!response.CallSuccess">{{response.message}}</label>
                     <label ng-if="!response.CallSuccess">{{response.error}}</label>
                 </div>
             </div>
        </script>

        <script type="text/ng-template" id="vlcSaveForLaterAcknowledge.html">
             <div class='panel panel-default review'>
                 <div class='panel-heading vlc-sfl'>
                     <div ng-if="response.error==='OK'">
                         <span class="icon icon-v-check-circle" aria-hidden="true"></span>
                         <label>{{::OmniSaved}}</label>
                     </div>
                     <div ng-if="response.error!=='OK'">
                         <span class="icon icon-v-close-circle" aria-hidden="true"></span>
                         <label>{{::OmniError}}</label>
                     </div>
                 </div>
                 <div class='panel-body'>
                     <div ng-if="response.error==='OK'">
                         <label>{{::OmniResume}}<a href='{{response.saveURL}}' target="_blank"> {{::OmniLink}}</a>.</label>
                         <br/>
                         <a class='vlc-omni-copy' ng-click="copyToClipboard(OmniCopyToClipBoard, response.saveURL)">{{::OmniCopyLink}}</a> or
                         <a href="mailto:?subject=&body={{::OmniResumeLink}} %0D{{response.saveURL}}%0D%0D{{::OmniSaveEmailBody}}">{{::OmniEmailMe}}</a>
                     </div>
                     <label ng-if="response.error!=='OK'">{{response.error}}</label>
                 </div>
             </div>
        </script>

        <script type="text/ng-template" id="vlcApplicationAcknowledgeV2.html">
            <div class='panel panel-default review'>
                <div class='panel-heading'>
                    {{::OmniCallResult}}
                </div>
                <div class='panel-body'>
                    <label>{{::OmniApplicationAcknowledge}} {{response.applicationRefNumber}}.</label>
                </div>
            </div>
        </script>

        <script type="text/ng-template" id="vlcAcknowledge.html">
            <div class='panel panel-default review'>
                <div class='panel-heading'>
                    {{::OmniDRCallResult}}
                </div>
                <div class='panel-body'>
                    <json-tree json='response' collapsed-level='2' labelmap='null'></json-tree>
                </div>
            </div>
        </script>

        <script type="text/ng-template" id="vlcRaptorAcknowledge.html">
            <div class='panel panel-default review'>
                <div class='panel-heading'>
                    {{::OmniDRCallResult}}
                </div>
                <div class='panel-body'>
                    <json-tree json='response' collapsed-level='2' labelmap='null'></json-tree>
                </div>
            </div>
        </script>

        <!-- Save For Later Page for mobile -->
    <script type="text/ng-template" id="vlcMobileSaveForLater.html">
        <div class='vlc-confirmation'>
                <div class='confirmation-icon'>
                    <span class="icon icon-v-save-line" ng-if="response.error==='OK'"></span>
                    <span class="icon icon-v-close-circle" ng-if="response.error!=='OK'"></span>
                </div>
                <div class='confirmation-body'>
                 <label ng-if="response.error==='OK'">{{::OmniSaved}}.</label>
                 <label ng-if="response.error!=='OK'">{{::OmniError}}.</label>
             </div>
         </div>
         <div ng-if="response.error==='OK'" class='action-buttons'>
             <a class='vlc-resume' href='{{response.saveURL}}' target="_blank">Resume </a>
             <a class='vlc-omni-copy' ng-click="copyToClipboard(OmniCopyToClipBoard, response.saveURL)">{{::OmniCopyLink}}</a>
             <a href="mailto:?subject=&body={{::OmniResumeLink}} %0D{{response.saveURL}}%0D%0D{{::OmniSaveEmailBody}}">{{::OmniEmailMe}}</a>
         </div>
         <label ng-if="response.error!=='OK'">{{response.error}}</label>
     </script>

<!-- Review Page for mobile -->
<script type="text/ng-template" id="vlcMobileReview.html">
    <div class='panel-body review-body'>
        <json-tree json='bpTree.response' skipnodes='bpTree.skipElements' collapsed-level='10' labelmap="bpTree.labelMap"></json-tree>
    </div>
</script>
<!-- Buttons in the Review page for mobile -->
<script type="text/ng-template" id="vlcMobileReviewActionFooter.html">
    <div class='row button-container'>
        <div class='col-md-{{::bpTree.reviewAction.propSetMap.previousWidth}} col-xs-6 vlc-back' ng-if='bpTree.reviewAction.bHasPrevious'>
            <button class='form-control btn btn-default' ng-click='navigate(bpTree, bpTree.reviewAction, "previous")'>{{::bpTree.reviewAction.propSetMap.previousLabel}}</button>
        </div>
        <div class='col-md-{{::bpTree.reviewAction.propSetMap.nextWidth}} col-xs-6 vlc-submit pull-right' ng-if='bpTree.reviewAction.bHasNext'>
            <button class='form-control btn btn-primary' ng-click='navigate(bpTree, bpTree.reviewAction, "next")'>{{::bpTree.reviewAction.propSetMap.nextLabel}}</button>
        </div>
    </div>
</script>
<!-- Confirmation Page for mobile -->
<script type="text/ng-template" id="vlcMobileConfirmation.html">
    <div class='vlc-confirmation'>
        <div class='confirmation-icon'><span class="icon icon-v-task" aria-hidden="true"></span        </div>
        <div class='confirmation-body'>
            <label ng-if='bpTree.response.applicationRefNumber'>Thank you for submitting the form. Your reference number is <b class='ref-number'>{{bpTree.response.applicationRefNumber}}</b>.</label>
            <label ng-if='bpTree.response.OrderNumber'>Thank you for submitting the order. Your order number is <b class='ref-number'>{{bpTree.response.OrderNumber}}</b>.</label>
        </div>
    </div>
</script>

<script type="text/ng-template" id="vlcMobileBPTreeMain.html">
    <div class='v-col-md-{{bpW}}'>
        <div ng-class='{"mobile-cart-container": bpTree.showPC}'>
            <div ng-repeat="vlcPC in ::bpTree.propSetMap.persistentComponent">
                <ng-include ng-if='bpTree.showPCNew[vlcPC.pcIndex]' id='{{bpTree.pcId[vlcPC.pcIndex]}}' src="bpTree.dfHPSTmpl[vlcPC.pcIndex]"/>
            </div>
        </div>
        <accordion close-others='bVert'>
        <div ng-repeat='child in ::children = child.children' ng-if='(!child.propSetMap.show || evaluateShow(child, this))'><child></child></div>
        </accordion>
    </div>
</script>

<!-- steps bar for mobile app-->
<script type="text/ng-template" id="vlcMobileSideBar.html">
    <div class="vlc-steps-chart row" ng-class='{"mobile-cart-step": bpTree.showPC}'>
        <!--HORIZONTAL -->
        <div class='col-xs-12 col-md-12'>
            <div>
                <label class="vlc-step-title">{{bpTree.children[bpTree.asIndex].propSetMap.label}}</label>
            </div>
            <div class="vlc-steps-container" ng-if='bpTree.children.length > 2'>
                <div ng-repeat="step in ::children" ng-if="step.type === 'Step' && step.show" class='vlc-omni-step'>
                    <div class="flex-row" ng-if='!step.bAccordionActive' ng-click='sidebarNav(step)'>
                        <span class="icon icon-v-step-prestine inactive step-icon" aria-hidden="true" ng-if='step.dirty === undefined || step.dirty === null'></span>
                        <span class="icon icon-v-check-circle-line step-icon" aria-hidden="true" ng-if='step.dirty === true && step.tInvalid === false && !step.bAccordionActive'></span>
                        <span class="icon icon-v-close-circle-line step-icon" aria-hidden="true" ng-if='step.dirty === true && step.tInvalid === true && !step.bAccordionActive'></span>
                        <label class="vlc-step-label" ng-class='{"inactive":step.dirty === undefined || step.dirty === null }'>{{::step.propSetMap.label}}
                        </label>
                    </div>
                    <div class="flex-row active" ng-if='step.bAccordionActive' ng-click='sidebarNav(step)'>
                        <span class="icon icon-v-step-current active step-icon" aria-hidden="true" ng-if='step.bAccordionActive'>
                        </span>
                        <label class="vlc-step-label" ng-class='{"active":step.bAccordionActive}'>{{::step.propSetMap.label}}
                        </label>
                    </div>
                    <!--flex-row-end-->
                    <div class="flex-row vlc-space">
                    </div>
                </div>
                <!--repeat-end-->
            </div>
            <!--container-end-->
        </div>
        <!--col-xs-12-end-->
        <!--VERTICAL -->
    </div>
</script>
<script type="text/ng-template" id="vlcMobileStep.html">
    <div ng-class="{'mobile-cart-accordion': bpTree.showPC}">
        <accordion-group id='{{::child.name}}' ng-show='((!bVert && child.bAccordionActive) || bVert)' is-open='child.open' is-disabled='!child.bAccordionActive' ng-class='{ active: child.bAccordionActive }' template-url='vlcMobileAccordionGroup.html' step='child'>
            <div>
                <accordion-heading>
                <div class='vlc-head-text'>{{::child.propSetMap.label}}</div>
                <div class='vlc-save-later' ng-if='bpTree.propSetMap.allowSaveForLater && bpTree.scriptState !== "review" && child.bAccordionActive'>
                    <a confirmed-click='saveForLater(child)' ng-confirm-click='{{::child.propSetMap.saveMessage}}'>{{::child.propSetMap.saveLabel}}</a>
                </div>
                </accordion-heading>

            <form novalidate class='col-md-{{::child.propSetMap.controlWidth}} form-horizontal' role='form' name='{{::bpTree.sOmniScriptId}}-{{$index}}' id='{{::bpTree.sOmniScriptId}}-{{$index}}'>
                <div class='row form-body'>
                    <div ng-repeat='child in ::children = child.children' ng-if='!child.eleArray[0].propSetMap.show || evaluateShow(child.eleArray[0], this)'>
                        <child></child>
                    </div>
                </div>
            </form>
            <div class='row button-container' ng-show='child.bHasPrevious || child.bHasNext'>
                <div ng-if='child.bHasPrevious' class='col-md-6 col-xs-6 vlc-previous pull-left'>
                    <button class='form-control btn btn-default' ng-click='previous(this, child)'>{{::child.propSetMap.previousLabel}}</button>
                </div>
                <div ng-show='child.bHasNext' class='col-md-6 col-xs-6 vlc-next' ng-class="{'pull-right': child.bHasPrevious }">
                    <button class='form-control btn btn-primary' ng-click='nextRepeater(child.nextIndex, child.indexInParent)' ng-class="{ 'vlc-primary-inactive': false }" ng-disabled='checkValidity(this, child.index, child.indexInParent, "Step", null, true)'>
                        {{::child.propSetMap.nextLabel}}
                    </button>
                </div>
            </div>
             <div ng-if='bpTree.resumeURL' class='auto-save-container'>
                    <label class="vlc-auto-sfl-msg">This script has been automatically saved.
                    </label>
                    </div>
        </accordion-group>
    </div>
</script>
<!-- step for mobile-->

<!-- iOS style slider for Range-->
<script type="text/ng-template" id="vlcMobileRange.html">
    <div ng-repeat='control in child.eleArray'>
        <ng-form name='loopform' class='col-md-{{::control.propSetMap.controlWidth}} vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm }'>
            <div class='range-block'>
                <i ng-click='removeItem(this, child, $index)' ng-if='$index !==0' class='vlc-minus icon-v-minus-circle'></i>
                <label class='field-label'>{{::control.propSetMap.label}} <span class='form-control-feedback text-danger' ng-show='control.req'></span>
                    <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='::control.propSetMap.help' data-placement='right' bs-tooltip='::control.propSetMap.helpText'></i>
                    <i ng-if='::control.propSetMap.repeat' ng-click='baseCtrl.addItem(this, child, $index)' class='vlc-plu s icon-v-plus-circle'></i>
                </label>
                <div class='col-xs-12 col-sm-12'>
                    <input id='{{::control.name}}' ranger chainup ng-focus="resetSrvErr(control)" type='range' ng-disabled='control.ro' ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' class='vlc-range-input' name='loopname' min='{{::control.propSetMap.rangeLow}}' max='{{::control.propSetMap.rangeHigh}}' ng-required='control.req' ng-model='control.response' value='control.response'></input>
                </div>
                <div class='range-low col-xs-1 col-sm-1'>{{::control.propSetMap.rangeLow}}</div>
                <div class='col-xs-10 col-sm-10'><span class="range-value" ng-if='control.response'>{{control.response}}</span></div>
                <div class='range-high col-xs-1 col-sm-1'>{{::control.propSetMap.rangeHigh}}</div>
            </div>
            <div class='vlc-sub-block' ng-include="'vlcErrorSubBlock.html'"></div>
            {{validForm = (loopform.loopname.$valid && control.req && !control.srvErr);""}}
            {{invalidForm = ((loopform.loopname.$invalid  && !control.req) || (loopform.loopname.$invalid && loopform.loopname.$dirty && control.req) || (control.srvErr));""}}
        </ng-form>
    </div>
</script>
<!-- iOS style switch for checkbox-->
<script type="text/ng-template" id="vlcSwitch.html">
    <div class="vlc-table">
        <div ng-repeat='control in child.eleArray'>
            <ng-form name='loopform' class='col-md-{{::control.propSetMap.controlWidth}} vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm }'>
                <div class="vlc-table-row">
                    <span><i ng-click='removeItem(this, child, $index)' ng-if='$index !==0' class='vlc-minus icon-v-minus-circle'></i>
                        <label class='field-label'>{{::control.propSetMap.label}} <span class='form-control-feedback text-danger' ng-show='control.req'></span>
                    <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='::control.propSetMap.help' data-placement='right' bs-tooltip='::control.propSetMap.helpText'></i>
                    <i ng-if='::control.propSetMap.repeat' ng-click='baseCtrl.addItem(this, child, $index)' class='vlc-plus icon-v-plus-circle'></i>
                    </label>
                </div>
                <div class="vlc-table-row">
                    <div class='vlc-switch-label'>
                        <label class='vlc-check-label'>{{::control.propSetMap.checkLabel}}</label>
                    </div>
                    <div class="vlc-switch-control">
                        <input id='{{::control.name}}' type='checkbox' name='loopname' class='vlc-switch' ng-model='control.response' ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' ng-focus="resetSrvErr(control)" ng-change='aggregate(this, control.index, control.indexInParent, true, -1)'></input>
                    </div>
                    <div class='vlc-sub-block' ng-include="'vlcErrorSubBlock.html'"></div>
                    {{validForm = (loopform.loopname.$valid && control.req && !control.srvErr);""}}
                    {{invalidForm = ((loopform.loopname.$invalid  && !control.req) || (loopform.loopname.$invalid && loopform.loopname.$dirty && control.req) || (control.srvErr));""}}
            </ng-form>
            </div>
        </div>
    </div>
</script>
<!-- Disclosure for mobile-->
<script type="text/ng-template" id="vlcMobileDisclosure.html">
    <div ng-repeat='control in child.eleArray'>
        <div class="well">
            <ng-form name='loopform' class='col-xs-12 col-md-{{::control.propSetMap.controlWidth}} vlc-form-group' ng-class='{ "has-success": validForm, "has-error": invalidForm }'>
                <div class="has-feedback">
                    <label class='field-label'>{{::control.propSetMap.label}} <span class='form-control-feedback text-danger' ng-show='control.req'></span></label>
                    <i class='icon-v-check-circle vlc-valid-input-check  form-control-feedback' ng-show='validForm'></i>
                    <i class='icon-v-close-circle vlc-error-input-check  form-control-feedback' ng-show='invalidForm'></i> {{validForm = (loopform.loopname.$valid && loopform.loopname.$dirty && control.req);""}} {{invalidForm = (loopform.loopname.$invalid && !control.req) || (loopform.loopname.$invalid && loopform.loopname.$dirty && control.req);""}}
                    <p class='vlc-textblock-text'>{{::control.propSetMap.text}}</p>
                </div>
                <div>
                    <label class='vlc-disclosure-statement'>{{::control.propSetMap.checkLabel}}</label>
                    <div>
                        <div class="vlc-disclosure-check">
                            <input id='{{::control.name}}' type='checkbox' name='loopname' ng-model='control.response' ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' ng-required='control.req' ng-change='aggregate(this, control.index, control.indexInParent, true, -1)'></input>
                            <label for='{{::control.name}}'></label>
                        </div>
            </ng-form>
            </div>
            </div>
</script>
<!-- radio buttons for mobile app-->
<script type="text/ng-template" id="vlcMobileRadio.html">
    <div ng-repeat='control in child.eleArray'>
        <ng-form name='loopform' class='col-md-{{::control.propSetMap.controlWidth}} vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm }'>
            <i ng-click='removeItem(this, child, $index)' ng-if='$index !==0' class='vlc-minus icon-v-minus-circle'></i>
            <label class='field-label vlc-radio-label'>{{::control.propSetMap.label}} <span class='form-control-feedback text-danger' ng-show='control.req'></span>
                <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='::control.propSetMap.help' data-placement='right' bs-tooltip='::control.propSetMap.helpText'></i>
                <i ng-show='::control.propSetMap.repeat' ng-click='baseCtrl.addItem(this, child, $index)' class='vlc-plus icon-v-plus-circle'></i>
            </label>
            <div class='error-field' ng-show='control.srvErr' style='position:inherit;'>
                <small ng-show='control.srvErr' class='prop-error form-control-feedback'>{{control.srvErr}}</small>
            </div>
            <div class='vlc-radio-container'>
                <div class='vlc-radio' ng-repeat='option in getOptions(control) track by option.name'>
                    <label>
                    <span class="vlc-radio-wrapper">
                     <input id='{{::control.name}}' type='radio' ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' ng-value='option.name' ng-model='control.response' ng-required='!control.response && control.req' ng-focus="resetSrvErr(control)" ng-change='aggregate(this, control.index, control.indexInParent, true, -1)' />
                     <span />
                        <span class="vlc-radio-label">{{::option.value}}
                        </span>
                    </label>
                </div>
            </div>
            <div class='vlc-sub-block'></div>
            {{validForm = (loopform.loopname.$valid && control.req && !control.srvErr);""}}
            {{invalidForm = ((loopform.loopname.$invalid  && !control.req) || (loopform.loopname.$invalid && loopform.loopname.$dirty && control.req) || (control.srvErr));""}}
        </ng-form>
    </div>
</script>
<!-- muti-select items for mobile app-->
<script type="text/ng-template" id="vlcMobileSelectItem.html">
    <div ng-repeat='control in child.eleArray'>
        <ng-form name='loopform' class='col-md-{{::control.propSetMap.controlWidth}} vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm }'>
            <i ng-click='removeItem(this, child, $index)' ng-if='$index !==0' class='vlc-minus icon-v-minus-circle'></i>
            <label class='field-label vlc-radio-label'>{{::control.propSetMap.label}} <span class='form-control-feedback text-danger' ng-show='control.req'></span>
                <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='::control.propSetMap.help' data-placement='right' bs-tooltip='::control.propSetMap.helpText'></i>
                <i ng-if='::control.propSetMap.repeat' ng-click='baseCtrl.addItem(this, child, $index)' class='vlc-plus icon-v-plus-circle'></i>
                <i class='icon-v-check-circle vlc-valid-input form-control-feedback' style='position:inherit' ng-show='validForm'></i>
                <i class='icon-v-close-circle vlc-error-input form-control-feedback' style='position:inherit' ng-show='invalidForm'></i>
            </label>
            <div class='error-field' ng-show='loopform.$error' ng-hide='loopform.$pristine' style='position:inherit'>
                <small ng-show='loopform.$error.required' class='prop-error form-control-feedback'>required</small>
            </div>
            <div class='error-field' ng-show='control.srvErr' style='position:inherit'>
                <small ng-show='control.srvErr' class='prop-error form-control-feedback'>{{control.srvErr}}</small>
            </div>
            <div class='vlc-radio-container'>
                <div ng-repeat='option in getOptions(control) track by option.name'>
                    <span class='vlc-select-item'>
                    <label>
                        <span class="vlc-radio-wrapper">
                            <input id='{{::control.name}}' ng-disabled='control.ro' type='checkbox' ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' ng-model='option.selected' ng-focus="resetSrvErr(control)" ng-change='onMultiSelect(this, control, option)'/>
                        </span>
                        <span class="vlc-radio-label">{{option.value}}</span>
                    </label>
                    </span>
                </div>
            </div>
            <div class='vlc-sub-block'>
            </div>
            {{validForm = (loopform.loopname.$valid && control.req && !control.srvErr);""}}
            {{invalidForm = ((loopform.loopname.$invalid  && !control.req) || (loopform.loopname.$invalid && loopform.loopname.$dirty && control.req) || (control.srvErr));""}}
        </ng-form>
    </div>
</script>
<!-- select input for mobile app-->
<script type="text/ng-template" id="vlcMobileSelect.html">
    <div ng-repeat='control in child.eleArray'>
        <ng-form name='loopform' class='col-md-{{::control.propSetMap.controlWidth}} vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm }'>
            <i ng-click='removeItem(this, child, $index)' ng-if='$index !==0' class='vlc-minus icon-v-minus-circle'></i>
            <label class='field-label'>{{::control.propSetMap.label}} <span class='form-control-feedback text-danger' ng-show='control.req'></span>
                <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='::control.propSetMap.help' data-placement='right' bs-tooltip='::control.propSetMap.helpText'></i>
                <i ng-if='::control.propSetMap.repeat' ng-click='baseCtrl.addItem(this, child, $index)' class='vlc-plus icon-v-plus-circle'></i>
            </label>
            <div class="select-style">
                <select id='{{::control.name}}' ng-disabled='control.ro' chainup ng-focus="resetSrvErr(control)" name='loopname' ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' ng-model='control.response' class='form-control' ng-required='control.req' ng-options='option as option.value for option in getOptions(control) track by option.name'>
                    <option value="">{{::OmniClear}}</option>
                </select>
            </div>
            <div class='vlc-sub-block' ng-include="'vlcErrorSubBlock.html'"></div>
            {{validForm = (loopform.loopname.$valid && control.req && !control.srvErr);""}}
            {{invalidForm = ((loopform.loopname.$invalid  && !control.req) || (loopform.loopname.$invalid && loopform.loopname.$dirty && control.req) || (control.srvErr));""}}
        </ng-form>
    </div>
</script>
<!-- date input for mobile app-->
<script type="text/ng-template" id="vlcMobileDate.html">
    <div ng-repeat='control in child.eleArray'>
        <ng-form name='loopform' class='col-md-{{::control.propSetMap.controlWidth}} vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm }'>
            <i ng-click='removeItem(this, child, $index)' ng-if='$index !==0' class='vlc-minus icon-v-minus-circle'></i>
            <label class='field-label'>{{::control.propSetMap.label}} <span class='form-control-feedback text-danger' ng-show='control.req'></span>
                <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='::control.propSetMap.help' data-placement='right' bs-tooltip='::control.propSetMap.helpText'></i>
                <i ng-if='::control.propSetMap.repeat' ng-click='baseCtrl.addItem(this, child, $index)' class='vlc-plus icon-v-plus-circle'></i>
            </label>
            <input id='{{::control.name}}' ng-disabled='control.ro' type='text' ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' ng-focus="resetSrvErr(control)" ng-change='aggregate(this, control.index, control.indexInParent, true, -1)' class='form-control' ng-model='control.response' ng-model-options="{ updateOn: 'default focusout blur', debounce: { 'default': control.propSetMap.debounceValue, 'focusout': 0, 'blur': 0 } }" ng-required='control.req' name='loopname' data-icon-left='icon-v-left-caret' data-icon-right='icon-v-right-caret' data-date-format='{{::control.propSetMap.dateFormat}}' data-date-type='date' data-placement='auto' data-autoclose='true' name='date' bs-datepicker ng-if='ngInitValidation(this, control)'  autocomplete="off"/>
            <div class='vlc-sub-block' ng-include="'vlcErrorSubBlock.html'"></div>
            {{validForm = (loopform.loopname.$valid && control.req && !control.srvErr);""}}
            {{invalidForm = ((loopform.loopname.$invalid  && !control.req) || (loopform.loopname.$invalid && loopform.loopname.$dirty && control.req) || (control.srvErr));""}}
        </ng-form>
    </div>
</script>
<!-- currency input for mobile app-->
<script type="text/ng-template" id="vlcMobileCurrency.html">
    <div ng-repeat='control in child.eleArray'>
        <ng-form name='loopform' class='col-md-{{::control.propSetMap.controlWidth}} vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm }'>
            <i ng-click='removeItem(this, child, $index)' ng-if='$index !==0' class='vlc-minus icon-v-minus-circle'></i>
            <label class='field-label'>{{::control.propSetMap.label}} <span class='currency-symbol' ng-if='::control.propSetMap.currencySymbol'>({{::control.propSetMap.currencySymbol}})</span> <span class='form-control-feedback text-danger' ng-show='control.req'></span>
                <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='::control.propSetMap.help' data-placement='right' bs-tooltip='::control.propSetMap.helpText'></i>
                <i ng-if='::control.propSetMap.repeat' ng-click='baseCtrl.addItem(this, child, $index)' class='vlc-plus icon-v-plus-circle'></i>
            </label>
            <input id='{{::control.name}}' ng-blur='aggregate(this, control.index, control.indexInParent, true, -1)' ng-focus="resetSrvErr(control)" ng-disabled='control.ro' type='text' ui-number-mask='::control.propSetMap.mask' ui-negative-number='{{::control.propSetMap.allowNegative}}' ui-hide-group-sep='{{::control.propSetMap.hideGroupSep}}' min='::control.propSetMap.min' max='::control.propSetMap.max' name='loopname' ng-model='control.response' ng-model-options="{ updateOn: 'default focusout blur', debounce: { 'default': control.propSetMap.debounceValue, 'focusout': 0, 'blur': 0 } }" class='form-control vlc-currency' ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' ng-required='control.req' />
            <div class='vlc-sub-block' ng-include="'vlcErrorSubBlock.html'"></div>
            {{validForm = (loopform.loopname.$valid && control.req && !control.srvErr);""}}
            {{invalidForm = ((loopform.loopname.$invalid  && !control.req) || (loopform.loopname.$invalid && loopform.loopname.$dirty && control.req) || (control.srvErr));""}}
        </ng-form>
    </div>
</script>
<!-- time input for mobile app-->
<script type="text/ng-template" id="vlcMobileTime.html">
    <div ng-repeat='control in child.eleArray'>
        <ng-form name='loopform' class='col-md-{{::control.propSetMap.controlWidth}} vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm }'>
            <i ng-click='removeItem(this, child, $index)' ng-if='$index !==0' class='vlc-minus icon-v-minus-circle'></i>
            <label class='field-label'>{{::control.propSetMap.label}} <span class='form-control-feedback text-danger' ng-show='control.req'></span>
                <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='::control.propSetMap.help' data-placement='right' bs-tooltip='::control.propSetMap.helpText'></i>
                <i ng-if='::control.propSetMap.repeat' ng-click='baseCtrl.addItem(this, child, $index)' class='vlc-plus icon-v-plus-circle'></i>
            </label>
            <input id='{{::control.name}}' type='text' ng-disabled='control.ro' name='loopname' ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' ng-focus="resetSrvErr(control)" ng-change='aggregate(this, control.index, control.indexInParent, true, -1)' data-time-type='date' class='form-control' data-icon-up='icon-v-up-caret' data-icon-down='icon-v-down-caret' data-start-date='Date.now()' ng-model='control.response' ng-model-options="{ updateOn: 'default focusout blur', debounce: { 'default': control.propSetMap.debounceValue, 'focusout': 0, 'blur': 0 } }" ng-required='control.req' data-autoclose='true' placeholder='Time' data-placement='auto' bs-timepicker  autocomplete="off"/>
            <div class='vlc-sub-block' ng-include="'vlcErrorSubBlock.html'"></div>
            {{validForm = (loopform.loopname.$valid && control.req && !control.srvErr);""}}
            {{invalidForm = ((loopform.loopname.$invalid  && !control.req) || (loopform.loopname.$invalid && loopform.loopname.$dirty && control.req) || (control.srvErr));""}}
        </ng-form>
    </div>
</script>
<!-- date and time input group for mobile app-->
<script type="text/ng-template" id="vlcMobileDatetime-local.html">
    <div ng-repeat='control in child.eleArray'>
        <ng-form name='loopform' class='col-md-{{::control.propSetMap.controlWidth}} vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm }'>
            <i ng-click='removeItem(this, child, $index)' ng-if='$index !==0' class='vlc-minus icon-v-minus-circle'></i>
            <label class='field-label vlc-datetime-label'>{{::control.propSetMap.label}} <span class='form-control-feedback text-danger' ng-show='control.req'></span>
                <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='::control.propSetMap.help' data-placement='right' bs-tooltip='::control.propSetMap.helpText'></i>
                <i ng-if='::control.propSetMap.repeat' ng-click='baseCtrl.addItem(this, child, $index)' class='vlc-plus icon-v-plus-circle'></i>
            </label>
            <div class='vlc-datetime-container'>
                <div class='vlc-date'>
                    <input id='{{::control.name}}' ng-disabled='control.ro' type='text' name='loopname' ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' ng-focus="resetSrvErr(control)" ng-change='aggregate(this, control.index, control.indexInParent, true, -1)' class='form-control' ng-model='control.response' ng-model-options="{ updateOn: 'default focusout blur', debounce: { 'default': control.propSetMap.debounceValue, 'focusout': 0, 'blur': 0 } }" ng-required='control.req' data-icon-left='icon-v-left-caret' data-icon-right='icon-v-right-caret' data-date-format='{{::control.propSetMap.dateFormat}}' data-start-date="today" data-placement='auto' data-date-type='date' placeholder='Date' bs-datepicker  autocomplete="off"/>
                </div>
                <div class='vlc-time'>
                    <input id='{{::control.name}}' ng-disabled='control.ro' type='text' name='loopname' ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' ng-focus="resetSrvErr(control)" ng-change='aggregate(this, control.index, control.indexInParent, true, -1)' data-time-type='date' class='form-control' data-icon-up='icon-v-up-caret' data-icon-down='icon-v-down-caret' data-start-date='Date.now()' ng-model='control.response' ng-model-options="{ updateOn: 'default focusout blur', debounce: { 'default': control.propSetMap.debounceValue, 'focusout': 0, 'blur': 0 } }" ng-required='control.req' data-autoclose='true' placeholder='Time' data-placement='auto' bs-timepicker  autocomplete="off"/>
                </div>
            </div>
            <div class='vlc-sub-block' ng-include="'vlcErrorSubBlock.html'"></div>
            {{validForm = (loopform.loopname.$valid && control.req && !control.srvErr);""}}
            {{invalidForm = ((loopform.loopname.$invalid  && !control.req) || (loopform.loopname.$invalid && loopform.loopname.$dirty && control.req) || (control.srvErr));""}}
        </ng-form>
    </div>
</script>
<script  type="text/ng-template" id="vlcMobileSmallItems.html">
    <h2>{{::control.propSetMap.label}}</h2>
    <div class="col-md-6 small-list" ng-repeat="p in control.vlcSI[control.itemsKey]" ng-class="{even: $even, odd: $odd}">
            <div class="row result-box"  ng-class="{'selected': p.added}">
                <div class="img-container">
                    <img ng-if="p.Image" src="../servlet/servlet.FileDownload?file={{p.Image}}"/>
                </div>
                <div class="product-info" >
                    <h3 class="title">{{p.Name}}</h3>
                    <p class="description">
                        {{p.Description | limitTo: 110}}{{p.Description.length > 110 ? '...' : ''}}
                    </p>
                </div>
                <div class="price-info-mrc pull-left">
                        <h6>{{::MRC}}</h6>
                        <h2>{{p.MonthlyCost}}</h2>
                </div>
                <div class="price-info-nrc pull-left">
                    <h6>{{::NRC}}</h6>
                    <h2>{{p.OneTimeCost}}</h2>
                </div>
                <div class="action">
                    <button class="btn btn-primary" ng-if="!p.added" ng-click="buttonClick(bpTree.response, control, this, p, 'Add', baseCtrl.customHandleSelectedItem)">
                            {{::AddToCart}}
                    </button>
                    <button class="btn btn-success" ng-if="p.added"  ng-click="buttonClick(bpTree.response, control, this, p, 'Remove', baseCtrl.customHandleSelectedItem)">
                            <span class="icon icon-v-check"></span>
                    </button>
                </div>
            </div>
    </div>
</script>
<script type="text/ng-template" id="vlcMobileSelectableItem.html">
    <h2>{{::control.propSetMap.label}}</h2>
    <div class="selecteableItem" ng-repeat='p in control.vlcSI[control.itemsKey]'>
        <div class="row result-box " ng-class="{'selected':p.added}">
            <div class="img-container">
                <img ng-if="p.Image" src="../servlet/servlet.FileDownload?file={{p.Image}}"/>
                <img ng-if="!p.Image" src="{!$Resource.product_placeholder}" alt='placeholder' />
            </div>

            <div class="product-info" >
                <h5 class="title">{{p.Name}}</h5>
                <p class="description">
                 {{p.Description | limitTo: 120}}{{p.Description.length > 120 ? '...' : ''}}
             </p>
             <!--
             <span class="detail">MORE DETAIL <span class="icon-v-right-caret"></span></span>
         -->
         <div class="price-info-mrc pull-left">
            <h6>{{::MRC}}</h6>
            <h2>{{p.MonthlyCost}}</h2>
        </div>
        <div class="price-info-nrc pull-left">
            <h6>{{::NRC}}</h6>
            <h2>{{p.OneTimeCost}}</h2>
        </div>
        <div class="pull-right" id="vlocity-price">
            <div class="item-actions">
                <button class="btn btn-primary" ng-if="!p.added" ng-click="buttonClick(bpTree.response, control, this, p, 'Add', baseCtrl.customHandleSelectedItem)">
                   <span class="icon icon-v-cart-line"></span>
               </button>
               <button class="btn btn-success" ng-if="p.added" ng-click="buttonClick(bpTree.response, control, this, p, 'Remove', baseCtrl.customHandleSelectedItem)">
                <span class="icon icon-v-check"></span>
            </button>
            <!--
            <div ng-if="p.comparable" class="compare-link">Add to Compare</div>
        -->
    </div>
</div>
</div>
</div>
</div>
</script>

<script type="text/ng-template" id="vlcMobileSelectableItems.html">
    <div class="mobile-selectable-items-container">
        <div ng-repeat='control in child.eleArray' id='{{::control.name}}'>
            <ng-include ng-if='ngInitValidation(this, control)' src='::control.propSetMap.HTMLTemplateId'/>
        </div>
    </div>
</script>

 <script type="text/ng-template" id="vlcMobileFilterItemMSelect.html">
       <div class="filter-item" ng-repeat='control in child.eleArray'>
            <ng-form name='loopform' class='filter-item'>
                <h3 class="filter-title">{{::control.propSetMap.label}} </h3>
                <div class="vlc-radio-container filter-inputs" ng-if="::control.propSetMap.type ==='Multi-select'">
                    <div ng-repeat='option in getOptions(control) track by option.name' class='vlc-select-item'>
                            <label>
                                <span class="vlc-radio-wrapper">
                                <input id='{{::control.name}}' name='loopname' ng-init='init(this, control)' ng-if='ngInitValidation(this, control)' type='checkbox' ng-model='option.selected' ng-change='onMultiSelect(this, control, option)'/>
                                   </span>
                                 <span class="vlc-radio-label">{{::option.value}}</span>
                            </label>
                    </div>
                </div>
            </ng-form>
        </div>
</script>

<script type="text/ng-template" id="vlcMobileFilterBlock.html">
    <div id='{{::control.name}}' ng-repeat='control in child.eleArray' class="filter-block mobile-filter-block col-md-{{::control.propSetMap.controlWidth}}">
        <h2 ng-click="showFilter = ! showFilter" class='mobile-header-block' style="cursor:pointer;">
            {{::control.propSetMap.label}} <span ng-class="{'icon-v-up-caret':showFilter, 'icon-v-down-caret': !showFilter}"></span>
        </h2>
        <div class="mobile-filter-options" ng-class="{ 'hidden': ! showFilter }">
            <div ng-repeat='child in ::children = control.children' ng-if='!child.eleArray[0].propSetMap.show || evaluateShow(child.eleArray[0], this)'>
                <child></child>
            </div>
            <div class="mobile-filter-buttons">
            <button type="button" class="btn btn-primary" ng-disabled='false' ng-click='buttonClick(bpTree.response, control, this); showFilter = false;'>
                {{::control.propSetMap.buttonLabel}}
            </button>
            </div>
        </div>
    </div>
</script>

<script type="text/ng-template" id="vlcMobileVCart.html">
</script>

<script type="text/ng-template" id="vlcMobileHCart.html">
    <div class="horizontal-cart hide-md-screen mobile-horizontal-cart" ng-init="showCart = false;">
        <div class="panel panel-default mobile-panel-container">
            <div class="mobile-panel-heading">
                <div class="head-item cart-toggle" ng-click="showCart = !showCart;">
                    <div class="cart-icon mobile-cart-icon icon-v-cart-line"></div>
                    <div class="mobile-cart-title"><h3 class="panel-title">{{::bpTree.propSetMap.persistentComponent[vlcPC.pcIndex].label}}</h3></div>
                    <div class="toggle-icon" ng-class="{'icon-v-up-caret':showCart, 'icon-v-down-caret': !showCart}"></div>
                </div>
                <div class="head-item mobile-mrc-block">
                    <label class="mobile-mrc-title">{{::OmniOneTime}}</label>
                    <label class="mobile-mrc-num">{{bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].OneTimeSum | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}</label>
                </div>
                <div class="head-item mobile-nrc-block">
                    <label class="mobile-mrc-title">{{::OmniMonthly}}</label>
                    <label class="mobile-mrc-num">{{bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].RecurringSum | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}</label>
                </div>
                <!--
                <div class="head-item">
                    <button class="btn btn-primary">Continue</button>
                </div>
                -->
            </div>
            <div class="mobile-panel-body" ng-show="showCart">
                <section class="mobile-section-cur-selection">
                    <div class="hide"><h3>{{::bpTree.propSetMap.persistentComponent[vlcPC.pcIndex].label}}</h3></div>
                    <div class="item mobile-section-row" ng-repeat="i in bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]][bpTree.pcItemsKey[vlcPC.pcIndex]] | filterMultiple:{provisioningStatus:['New','Pending','Changed']}">
                        <div class="item-name">
                            <label class="item-name mobile-selection-label">{{i.itemSObject.PricebookEntry.Product2.Name}}</label>
                        </div>
                        <div class="price mobile-price-selection">
                            <div class=""><label class="mobile-mrc-title">{{::OmniOneTimeCost}}</label></div>
                            <p>                                
                                <span class="price old-price" ng-show="i.itemSObject[nsPrefix + 'OneTimeCharge__c'] > i.itemSObject[nsPrefix + 'OneTimeTotal__c']">
                                    {{i.itemSObject[nsPrefix + 'OneTimeCharge__c'] | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}
                                </span>
                                <span class="price" ng-class="{'new-price':i.itemSObject[nsPrefix + 'OneTimeCharge__c'] > i.itemSObject[nsPrefix + 'OneTimeTotal__c']}">
                                {{i.itemSObject[nsPrefix + 'OneTimeTotal__c'] | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}
                                </span>
                            </p>
                        </div>
                        <div class="price mobile-price-selection">
                            <div class=""><label class="mobile-mrc-title">{{::OmniMonthlyCost}}</label></div>
                            <p>
                                <span class="price old-price" ng-show="i.itemSObject[nsPrefix + 'RecurringCharge__c'] > i.itemSObject[nsPrefix + 'RecurringTotal__c']">
                                    {{i.itemSObject[nsPrefix + 'RecurringCharge__c'] | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}
                                </span>
                                <span class="price" ng-class="{'new-price':i.itemSObject[nsPrefix + 'RecurringCharge__c'] > i.itemSObject[nsPrefix + 'RecurringTotal__c']}">
                                {{i.itemSObject[nsPrefix + 'RecurringTotal__c'] | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}
                                </span>
                            </p>
                        </div>
                        <div class="quantity">
                            <div class="mobile-circle">
                                <span class="trash-icon icon-v-trash mobile-circle-icon" ng-click="pcAction(vlcPC.pcIndex, bpTree, this, i, 'Delete')"></span>
                            </div>
                            <!--<span class="times">x</span>
                            <input type="number" name="quantity" min='0' step="1" ng-model="i.itemSObject.Quantity" ng-change="pcAction(vlcPC.pcIndex, bpTree, this, i, 'Update')"/>
                            -->
                            <input type="number" name="quantity" min='0' step="1" ng-model="i.itemSObject.Quantity" ng-disabled="true"/>
                        </div>
                    </div>
                </section>
                <section class="mobile-section-cur-setup">
                    <h5 class="mobile-current-setup-title">{{::OmniCurrentSetup}}</h5>
                    <div class="item mobile-section-row" ng-repeat="i in bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]][bpTree.pcItemsKey[vlcPC.pcIndex]] | filterMultiple:{provisioningStatus:['Active','Inactive']}">
                        <div class="item-name">
                            <label class="item-name mobile-selection-label">{{i.itemSObject.PricebookEntry.Product2.Name}}</label>
                        </div>
                        <div class="price pull-left mobile-price-selection">
                            <div class=""><label>{{::OmniOneTimeCost}}</label></div>
                            <p>
                                <span class="price">
                                {{i.itemSObject[nsPrefix + 'OneTimeTotal__c'] | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}
                                </span>
                            </p>
                        </div>
                        <div class="price mobile-price-selection">
                            <div class=""><label>{{::OmniMonthlyCost}}</label></div>
                            <p>
                                <span class="price">
                                {{i.itemSObject[nsPrefix + 'RecurringTotal__c'] | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}
                                </span>
                            </p>
                        </div>
                        <div class="quantity">
                            <label>QTY</label>
                            <p>{{i.itemSObject.Quantity}}</p>
                        </div>
                    </div>
                </section>
                <section>
                    <div class="totals row">
                        <h5 class="mobile-cart-summary-title">CART SUMMARY</h5>
                        <div class="price pull-left mobile-price-selection">
                            <label class="item-name mobile-mrc-title">{{::OmniMonthly}}</label>
                            <h4 class="">{{bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].RecurringSum | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}</h4>
                        </div>
                        <div class="price mobile-price-selection">
                            <label class="item-name mobile-mrc-title">{{::OmniOneTime}}</label>
                            <h4 class="">{{bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].OneTimeSum | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}</h4>
                        </div>
                    </div>
                </section>
            </div>
        </div>
    </div>

    <!-- VERTICAL MINICART-->
    <div class="cart mobile-v-cart">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">{{::bpTree.propSetMap.persistentComponent[vlcPC.pcIndex].label}}</h3>
            </div>

            <div class="panel-body">
                <div class="item row" ng-repeat="i in bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]][bpTree.pcItemsKey[vlcPC.pcIndex]] | filterMultiple:{provisioningStatus:['New','Pending','Changed']}">
                    <div class="col-md-1">
                        <span class="icon icon-v-trash" ng-click="pcAction(vlcPC.pcIndex, bpTree, this, i, 'Delete')"></span>
                    </div>
                    <div class="col-md-8">
                        <label class="item-name">{{i.itemSObject.PricebookEntry.Product2.Name}}<span class="icon-v-right-caret"></span></label>
                        <p><label>{{::MRC}}</label> {{i.itemSObject[nsPrefix + 'RecurringTotal__c'] | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}</p>
                        <p><label>{{::NRC}}</label> {{i.itemSObject[nsPrefix + 'OneTimeTotal__c'] | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}</p>
                        <span class = 'vlocity-error' ng-repeat="e in i.errors">
                            {{e}}
                        </span>
                    </div>
                    <div class=" quantity col-md-3">
                        <span>x</span>
                        <!--
                        <input type="number" name="quantity" min='0' step="1" ng-model="i.itemSObject.Quantity" ng-change="pcAction(vlcPC.pcIndex, bpTree, this, i, 'Update')"/>
                        -->
                        <input type="number" name="quantity" min='0' step="1" ng-model="i.itemSObject.Quantity" ng-disabled="true"/>
                    </div>
                </div>
            </div>

            <div class="panel-heading">
                <h3 class="panel-title">{{::OmniCurrentSetup}}</h3>
            </div>

            <div class="panel-body">
            <div class="item row" ng-repeat="i in bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]][bpTree.pcItemsKey[vlcPC.pcIndex]] | filterMultiple:{provisioningStatus:['Active','Inactive']}">
                    <!--
                    <div class="col-md-1">
                        <span class="icon icon-v-trash" ng-click="pcAction(vlcPC.pcIndex, bpTree, this, i, 'Delete')"></span>
                    </div>
                    -->
                    <div class="col-md-8">
                        <label class="item-name">{{i.itemSObject.PricebookEntry.Product2.Name}}<span class="icon-v-right-caret"></span></label>
                        <p><label>{{::MRC}}</label> {{i.itemSObject[nsPrefix + 'RecurringTotal__c'] | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}</p>
                        <p><label>{{::NRC}}</label> {{i.itemSObject[nsPrefix + 'OneTimeTotal__c'] | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}</p>
                        <span class = 'vlocity-error' ng-repeat="e in i.errors">
                            {{e}}
                        </span>
                    </div>
                    <!--
                    <div class=" quantity col-md-3">
                        <span>x</span>
                        <input type="number" name="quantity" min='0' step="1" ng-model="i.itemSObject.Quantity" ng-change="pcAction(vlcPC.pcIndex, bpTree, this, i, 'Update')"/>
                    </div>
                    -->
                </div>
            </div>

            <div class="panel-body border-top">
                <div class="totals row">
                    <h4 class="totals-title col-md-7">{{::OmniMonthly}} </h4>
                    <h4 class="col-md-5 cost pull-right">
                        {{bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].RecurringSum | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}
                    </h4>
                </div>
                <div class="totals row">
                    <h4 class="totals-title col-md-7">{{::OmniOneTime}} </h4>
                    <h4 class="col-md-5 cost pull-right">
                        {{bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].OneTimeSum | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}
                    </h4>
                </div>
            </div>
        </div>
    </div>
</script>

<script type="text/ng-template" id="vlcMobileCartSummary.html">
  <div ng-repeat="vlcPC in ::bpTree.propSetMap.persistentComponent" ng-if="::vlcPC.id=='vlcCart'">
    <div class="cart-summary">
        <div class="panel panel-default">
            <div class="panel-heading">
                <span class="icon icon-v-cart-line"></span>
                <div class="mobile-cart-title"><h3 class="panel-title">Review Cart</h3></div>
                <div class="box"></div>
            </div>
            <div class="panel-body">
            <section class="mobile-section-cur-selection">
                <h5 class="mobile-summary-current-setup-title">{{::OmniYourSelections}}</h5>
                <div class="item mobile-section-row" ng-repeat="i in bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]][bpTree.pcItemsKey[vlcPC.pcIndex]] | filterMultiple:{provisioningStatus:['New','Pending','Changed']}">
                    <div class="item-name">
                        <label class="item-name mobile-selection-label">{{i.itemSObject.PricebookEntry.Product2.Name}}</label>
                    </div>
                    <div class="price mobile-price-selection">
                        <div class=""><label class="mobile-mrc-title">{{::MRC}}</label></div>
                        <p>
                            <span class="price old-price color-black" ng-show="i.itemSObject[nsPrefix + 'RecurringCharge__c'] > i.itemSObject[nsPrefix + 'RecurringTotal__c']">
                                {{i.itemSObject[nsPrefix + 'RecurringCharge__c'] | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}
                            </span>
                            <span class="price color-black" ng-class="{'new-price':i.itemSObject[nsPrefix + 'RecurringCharge__c'] > i.itemSObject[nsPrefix + 'RecurringTotal__c']}">
                            {{i.itemSObject[nsPrefix + 'RecurringTotal__c'] | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}
                            </span>
                        </p>
                    </div>
                    <div class="price mobile-price-selection">
                        <div class=""><label class="mobile-mrc-title">{{::NRC}}</label></div>
                        <p>
                            <span class="price old-price color-black" ng-show="i.itemSObject[nsPrefix + 'OneTimeCharge__c'] > i.itemSObject[nsPrefix + 'OneTimeTotal__c']">
                                {{i.itemSObject[nsPrefix + 'OneTimeCharge__c'] | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}
                            </span>
                            <span class="price color-black" ng-class="{'new-price':i.itemSObject[nsPrefix + 'OneTimeCharge__c'] > i.itemSObject[nsPrefix + 'OneTimeTotal__c']}">
                            {{i.itemSObject[nsPrefix + 'OneTimeTotal__c'] | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}
                            </span>
                        </p>
                    </div>
                    <div class="quantity">
                        <label>QTY</label>
                        <p>{{i.itemSObject.Quantity}}</p>
                    </div>
                </div>
            </section>
            <section class="mobile-section-cur-setup" ng-if="bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]][bpTree.pcItemsKey[vlcPC.pcIndex]] | filterMultiple:{provisioningStatus:['Active','Inactive']">
                <h5 class="mobile-current-setup-title">{{::OmniCurrentSetup}}</h5>
                <div class="item mobile-section-row" ng-repeat="i in bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]][bpTree.pcItemsKey[vlcPC.pcIndex]] | filterMultiple:{provisioningStatus:['Active','Inactive']}">
                    <div class="item-name">
                        <label class="item-name mobile-selection-label">{{i.itemSObject.PricebookEntry.Product2.Name}}</label>
                    </div>
                    <div class="price mobile-price-selection">
                        <label class="mobile-mrc-title">{{::MRC}}</label>
                        <p class="price">{{i.itemSObject[nsPrefix + 'RecurringTotal__c'] | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}</p>
                    </div>
                    <div class="price mobile-price-selection">
                        <label class="mobile-mrc-title">{{::NRC}}</label>
                        <p class="price">{{i.itemSObject[nsPrefix + 'OneTimeTotal__c'] | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}</p>
                    </div>
                    <div class="quantity">
                        <label>QTY</label>
                        <p>{{i.itemSObject.Quantity}}</p>
                    </div>
                </div>
            </section>
            <section>
                <div class="totals row">
                    <h5 class="mobile-cart-summary-title">CART SUMMARY</h5>
                    <div class="price pull-left mobile-price-selection">
                        <label class="item-name mobile-mrc-title">{{::MRC}}</label>
                        <h4 class="">{{bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].RecurringSum | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}</h4>
                    </div>
                    <div class="price mobile-price-selection">
                        <label class="item-name mobile-mrc-title">{{::NRC}}</label>
                        <h4 class="">{{bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].OneTimeSum | currency:bpTree.response.vlcPersistentComponent[bpTree.pcId[vlcPC.pcIndex]].currencySymbol | numFormatFilter }}</h4>
                    </div>
                </div>
            </section>
            </div>
            <!--
            <div class="panel-footer">
                <button class="btn btn-primary">CHECKOUT</button>
            </div>
            -->
        </div
    </div>
</div>    
</script>

<script type="text/ng-template" id="vlcMobileGeolocation.html">
    <div class='vlc-map-container' ng-repeat='control in child.eleArray'>
    <leaflet ng-if='control.response' markers="control.response" center='control.center' class='vlc-gmap'></leaflet>
    <div ng-if='!control.response' class='vlc-gmap-mask'></div>
    <span ng-init='getLocation(this, control)' ng-click='getLocation(this, control)' class='icon-v-location vlc-geo'></span>
    </div>
</script>

<script type="text/ng-template" id="vlcPDF.html">
    <br/>
    <br/>
    <div>
        <embed src="data:application/pdf;base64,{{response.vlcAttachmentBody}}" type="application/pdf" class='vlcPDFEmbed' />
    </div>
    <br/>
    <br/>
</script>

    <script type="text/ng-template" id="vlcCommunitiesStep.html">
        <accordion-group id='{{::child.name}}' ng-show='((!bVert && child.bAccordionActive) || bVert)' is-open='child.open' is-disabled='!child.bAccordionActive' ng-class='{ active: child.bAccordionActive }' template-url='vlcAccordionGroup.html' step='child'>
            <accordion-heading>
                {{::child.propSetMap.label}}
            </accordion-heading>
            <form novalidate class='col-md-{{::child.propSetMap.controlWidth}} col-sm-{{::child.propSetMap.controlWidth}} form-horizontal' role='form' name='{{::bpTree.sOmniScriptId}}-{{$index}}' id='{{::bpTree.sOmniScriptId}}-{{$index}}'>
                <div class='row'>
                    <div ng-repeat='child in ::children = child.children' ng-if='!child.eleArray[0].propSetMap.show || evaluateShow(child.eleArray[0], this)'>
                        <child></child>
                    </div>
                </div>
            </form>
            <div class='footer-row row'>
                <div class='vlc-sfl pull-left col-md-2 col-xs-12' ng-if='bpTree.propSetMap.allowSaveForLater && bpTree.scriptState !== "review" && child.bAccordionActive'>
                    <a class='form-control btn btn-link' confirmed-click='saveForLater(child)' ng-confirm-click='{{::child.propSetMap.saveMessage}}'>{{::child.propSetMap.saveLabel}}</a>
                </div>
                <div ng-show='!child.bHasNext' class='vlc-sfl pull-left col-md-2 col-xs-12' ng-if='bpTree.scriptState == "saveAndResume" && child.bAccordionActive'>
                    <a class='form-control btn btn-link' confirmed-click='completeScript(true)' ng-confirm-click='{{::child.propSetMap.completeMessage}}'>{{::child.propSetMap.completeLabel}}</a>
                </div>

                <div ng-show='child.bHasNext' class='col-md-2 col-xs-12 vlc-next pull-right'>
                     <button class='form-control btn btn-primary' ng-click='nextRepeater(child.nextIndex, child.indexInParent)' ng-class="{ 'vlc-primary-inactive': false }"
                        ng-disabled='checkValidity(this, child.index, child.indexInParent, "Step", null, true)'>
                        {{::child.propSetMap.nextLabel}}
                    </button>
                </div>

                <div ng-if='child.bHasPrevious' class='col-md-2 col-xs-12 vlc-previous pull-right'>
                    <button class='form-control btn btn-default' ng-click='previous(this, child)'>{{::child.propSetMap.previousLabel}}</button>
                </div>

                <div class='vlc-cancel pull-right col-md-2 col-xs-12' ng-if='child.bAccordionActive'>
                    <button class='form-control btn btn-default' confirmed-click='cancel()' ng-confirm-click='{{::child.propSetMap.cancelMessage}}'>{{::child.propSetMap.cancelLabel}}</button>
                </div>
            </div>
        </accordion-group>
    </script>

    <script type="text/ng-template" id="vlcAssetList.html">
        <div class="panel panel-default">
            <div class="panel-heading">
                <label>{{::control.propSetMap.label}}</label>
            </div>
            <table class="table">
               <thead>
                    <tr>
                        <th width="20px"/>
                        <th>{{::OmniAssetSerialNumber}}</th>
                        <th>{{::OmniAssetName}}</th>
                        <th>{{::OmniAssetProductName}}</th>
                        <th>{{::OmniAssetActivationDate}}</th>
                    </tr>
                </thead>
                <tbody class="upgrade-tbody-omni">
                    <tr ng-repeat='p in control.vlcSI[control.itemsKey]' ng-class="{ 'vlc-selectableitem-selected' : p.vlcSelected }" >
                        <td><input type='checkbox' ng-model='p.vlcSelected' ng-change='onSelectItem(control, p, $index, this)' checked/></td>
                        <td>{{p['Serial Number']}}</td>
                        <td>{{p['Asset Name']}}</td>
                        <td>{{p['Product Name']}}</td>
                        <td>{{p['Activation Date']}}</td>
                    </tr>
                </tbody>
            </table>
            <div class="upgrade-btn">
                <button class="btn btn-primary" ng-click="buttonClick(bpTree.response, control, this, p, 'Upgrade')" >Upgrade</button>
            </div>
        </div>
    </script>

    <script type="text/ng-template" id="vlcPaymentList.html">
        <div class="panel panel-default">
            <table class="table">
               <thead>
                    <tr>
                        <th width="20px"/>
                        <th>Primary</th>
                        <th>Type</th>
                        <th>Name</th>
                        <!-- <th/> -->
                    </tr>
                </thead>
                <tbody>
                    <tr ng-repeat='p in control.vlcSI[control.itemsKey]' ng-class="{ 'vlc-selectableitem-selected' : p.vlcSelected }" >
                        <td><input type='checkbox' ng-model='p.vlcSelected' ng-change='onSelectItem(control, p, $index, this)' checked ng-if="bpTree.response['Task Details']['Task Sub Category']!='Amend Payment Method'" /></td>
                        <td><span class="icon icon-v-check" ng-if='p.IsPrimary'></span></td>
                        <td>{{p.PayMethType}}</td>
                        <td>{{p.Name}}</td>
                        <!-- <td>
                            <button type="button" class="btn btn-link" ng-click=" buttonClick(bpTree.response, control, this, p, 'Update')">
                              <span class="icon icon-v-edit" aria-hidden="true"></span>
                            </button>
                            <button type="button" class="btn btn-link" ng-click="buttonClick(bpTree.response, control, this, p, 'Delete')">
                              <span class="icon icon-v-trash" aria-hidden="true"></span>
                            </button>
                        </td> -->
                    </tr>
                </tbody>
            </table>
        </div>
    </script>
    
    <!-- CONFIGURE PRODUCT -->

    <script type="text/ng-template" id="vlcProductConfig.html">
        <form class='vlocity page-container'class="modal hide fade" name='loopform' ng-init='initProductModal()'>
            <div class="mask" ng-show="loading">
                <div class="center-block spinner"></div>
            </div>
            <div class="modal-header modal-header-prodconfig">
                <h3 class="modal-title">{{::OmniConfigProdModalHeader}}</h3>
            </div>
            <div class="modal-body modal-prod-body">
                <div class="panel panel-default modal-prod-panel">
                    <div class="prodconf-products-hd">
                        <div class="prodconf-name" >{{::OmniConfigProdName}}</div>
                        <div class="prodconf-qty">{{::OmniConfigProdQTY}}</div>
                        <div class="p-add"></div>
                    </div>
                    <div class="modal-prod-content panel-body-omni">
                        <div class="prod-tree-omni" ng-repeat="prod in content" ng-include="'product_treeview.html'"></div>
                    </div>
                    <div class="modal-footer modal-prod-footer">
                        <button class="btn btn-modal btn-primary" ng-click="ok()" ng-disabled="loopform.$invalid">{{::OmniConfigProdModalOk}}</button>
                        <a class="link-btn-modal" ng-click="cancel()">{{::OmniConfigProdModalCancel}}</a>
                    </div
                </div>
            </div>
        </form>
    </script>

    <!-- HTML TEMPLATE: CONFIGURE PRODUCT TREE VIEW -->
    <script type="text/ng-template" id="product_treeview.html">
        <div class="product">
            <div class="product-details">
                <div ng-if="!prod.isRoot"></div>
                <div class="prodconf-name" ng-init="showCart = false; prod.showAttrConfig = true; prod.showTreeHier = true;">
                    <div class="hcart-icon-pointer level-pconf-{{prod.level}}">
                        <span ng-if="(prod.showTreeHier && prod.children !== undefined)">
                            <a ng-click="prod.showTreeHier = !prod.showTreeHier"><span class="glyphicon icon-v-down-arrow"></span></a>
                        </span>
                        <span ng-if="(!prod.showTreeHier && prod.children !== undefined)">
                            <a ng-click="prod.showTreeHier = !prod.showTreeHier"><span class="glyphicon icon-v-right-arrow"></span></a>
                        </span>
                    </div>
                    <span ng-if="prod.children !== undefined" ng-click="toggleProductChildren(prod)" class="toggle vlc-prodconf-name-label">{{prod.Name}}</span>
                    <span ng-if="prod.children === undefined">{{prod.Name}}</span>
                    <ul ng-if="prod.errors" class="errors">
                        <li ng-repeat="error in prod.errors">{{error}}</li>
                    </ul>
                    <div role="alert">
                        <div class="vlc-hcart-dummy-error hcart-icon-pointer level-pconf-{{prod.level}}"></div>
                        <span ng-if="prod.isRoot"><span class="error" ng-show="(prod.quantity === undefined || prod.quantity === null || prod.quantity < 1)">{{::OmniConfigProdQtyError0}}</span></span>
                        <span ng-if="!prod.isRoot"><span class="error" ng-show="(prod.minQuantity !== undefined && prod.minQuantity !== null && prod.maxQuantity !== undefined && prod.maxQuantity !== null && (prod.quantity === undefined || prod.quantity === null || prod.quantity < prod.minQuantity || prod.quantity > prod.maxQuantity))">{{::OmniConfigProdQtyError}} {{prod.minQuantity}} {{::OmniConfigProdQtyErrorAnd}} {{prod.maxQuantity}}.</span></span>
                        <span ng-if="!prod.isRoot"><span class="error" ng-show="(prod.minQuantity !== undefined && prod.minQuantity !== null && (prod.maxQuantity === undefined || prod.maxQuantity === null) && (prod.quantity === undefined || prod.quantity === null || prod.quantity < prod.minQuantity))">{{::OmniConfigProdQtyError1}} {{prod.minQuantity}}.</span></span>
                    </div>
                </div>
                <div class="prodconf-qty">
                    <span ng-if="prod.isRoot">
                        <input type="number" ng-init="oldQty = prod.quantity" ng-model="prod.quantity" ng-blur="oldQty !== prod.quantity && saveMode === 'Implicit' && implicitSaveProduct()" class="form-control input-sm" min="0" />
                    </span>
                    <span ng-if="!prod.isRoot">
                        <input type="number" ng-init="oldQty = prod.quantity" ng-model="prod.quantity" ng-blur="oldQty !== prod.quantity && saveMode === 'Implicit' && implicitSaveProduct()" class="form-control input-sm" max="{{prod.maxQuantity}}" min="{{prod.minQuantity}}" ng-disabled="prod.minQuantity === prod.maxQuantity && prod.minQuantity !== undefined" />
                    </span>
                 </div>
                <!--<div class="p-price">{{prod.RecurringCost | currency:currencySymbol | numFormatFilter}}</div>-->
                <!--<div class="p-price">{{prod.NonRecurringCost | currency:currencySymbol | numFormatFilter}}</div>-->
                <div class="p-add p-add-omni">
                    <div class="head-item cart-toggle" ng-click="showCart = !showCart;" >
                        <span ng-if="prod.hasConfigurableAttributes">
                            <span ng-click="prod.showAttrConfig = !prod.showAttrConfig;" class="toggle-icon" ng-class="{'icon-v-up-caret':showCart, 'icon-v-down-caret': !showCart}"></span>
                        </span>
                    </div>
                </div>
            </div>
            <div class="product-details-attr level-pconf-attr-{{prod.level}}" ng-if="prod.hasConfigurableAttributes == true">
                <div ng-if="!prod.isRoot" class="level-{{prod.level}}"></div>
                <div class="panel panel-default attr-config panel-default-prod-omni" collapse="!prod.showAttrConfig" style="height:auto">
                    <div class="panel-body panel-body-omni">
                        <div class="category" ng-repeat="(categoryCode, attributes) in prod.JSONAttribute" ng-if="prod.categoryMap[categoryCode].showCategory">
                            <div class="category-bd category-bd-omni">
                                <div class="attr" ng-repeat="attr in attributes" ng-if="attr.attributeconfigurable__c && attr.isactive__c && !attr.ishidden__c">
                                    <prodconf class="catagory-attr-fields"></prodconf>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        <div collapse="!(product.isRoot || prod.showTreeHier)" class= "vlc-prod-items">
            <div ng-repeat="prod in prod.children" ng-include="'product_treeview.html'"></div>
        </div>
    </script>

    <script type="text/ng-template" id="vlcProdConfText.html">
        <ng-form name='loopform' class='col-md-14 col-sm-14 vlc-form-group has-feedback ' ng-class='{ "has-success": validForm, "has-error": invalidForm, "is-disabled": attr.isreadonly__c}'>
            <label for="{{attr.attributeid__c}}" class='field-label'>{{attr.attributedisplayname__c}} <span class='form-control-feedback text-danger' ng-show='attr.isrequired__c' ng-required="attr.isrequired__c"></span>
                <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='attr.valuedescription__c' data-placement='right' bs-tooltip='attr.valuedescription__c'></i>
           </label>
            <div ng-class='{"input-group": attr.isquerydriven__c && !attr.isreadonly__c}'>
                <input type='text' class='form-control'
                    name='loopname'
                    id="{{attr.attributeid__c}}"
                    placeholder="{{attr.formatmask__c}}"
                    ng-model="attr.attributeRunTimeInfo.value"
                    ng-disabled="attr.isreadonly__c"
                    ng-required="attr.isrequired__c"
                    aria-label="{{attr.attributedisplayname__c}}" />
                <div class="input-group-btn" ng-if="attr.isquerydriven__c && !attr.isreadonly__c">
                    <button type="button" class="btn btn-default" ng-click="executeQueryableMethod(attr)">{{attr.querylabel__c}}</button>
                </div>
            </div>
            <div class="attr-query-results" collapse="!attr.attributeRunTimeInfo.showQueryResults">
                <div class="panel panel-sf">
                    <div class="panel-heading">
                        Results
                        <span class="pull-right p-add-omni"><a ng-click="attr.attributeRunTimeInfo.showQueryResults = !attr.attributeRunTimeInfo.showQueryResults">X</a></span>
                    </div>
                    <div ng-if="attr.attributeRunTimeInfo.queryresults.length == 0" class="query-results-empty">{{::OmniConfigProdQueryError}}</div>
                    <table class="table" ng-if="attr.attributeRunTimeInfo.queryresults.length > 0">
                        <tr ng-repeat="item in attr.attributeRunTimeInfo.queryresults">
                            <td ng-click="setQueryResultToAttributeValue(attr, item)">{{item}}</td>
                        </tr>
                    </table>
                </div>
            </div>
            <div class='vlc-sub-block' ng-include="'vlcErrorBlocProdConf.html'"></div>
            {{validForm = (loopform.loopname.$valid && attr.isrequired__c );""}}
            {{invalidForm = ((loopform.loopname.$invalid  && !attr.isrequired__c) || (loopform.loopname.$invalid && loopform.loopname.$dirty && attr.isrequired__c));""}}
        </ng-form>
    </script>

    <script type="text/ng-template" id="vlcProdConfCheckbox.html">
        <ng-form name='loopform' class="col-md-14 col-sm-14 vlc-form-group has-feedback" ng-class='{ "has-success": validForm, "has-error": invalidForm, "is-disabled": attr.isreadonly__c}'>
            <label
                for="{{attr.attributeid__c}}" 
                class='field-label'>{{attr.attributedisplayname__c}}
                <span class='form-control-feedback text-danger' ng-show='attr.isrequired__c' ng-required="attr.isrequired__c"></span>
                <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='attr.valuedescription__c' data-placement='right' bs-tooltip='attr.valuedescription__c'></i>
            </label>
            <br>
            <input id="{{attr.attributeid__c}}"
                type='checkbox'
                name='loopname'
                class='vlc-checkbox-solo'
                ng-model="attr.attributeRunTimeInfo.value"
                ng-disabled="attr.isreadonly__c">
            </input>
            <div class='vlc-sub-block' ng-include="'vlcErrorBlocProdConf.html'"></div>
            {{validForm = (loopform.loopname.$valid && attr.isrequired__c );""}}
            {{invalidForm = ((loopform.loopname.$invalid  && !attr.isrequired__c) || (loopform.loopname.$invalid && loopform.loopname.$dirty && attr.isrequired__c));""}}
        </ng-form>
    </script>

   <script type="text/ng-template" id="vlcProdConfNumber.html">
       <ng-form name='loopform' class='col-md-14 col-sm-14 vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm, "is-disabled": attr.isreadonly__c}'>
           <label for="{{attr.attributeid__c}}" class='field-label'>{{attr.attributedisplayname__c}} <span class='form-control-feedback text-danger' ng-show='attr.isrequired__c' ng-required="attr.isrequired__c"></span>
               <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='attr.valuedescription__c' data-placement='right' bs-tooltip='attr.valuedescription__c'></i>
           </label>
           <div ng-class='{"input-group": attr.isquerydriven__c && !attr.isreadonly__c}'>
               <input id="{{attr.attributeid__c}}"
                   type='number'
                   name='loopname'
                   class='form-control'
                   placeholder="{{attr.formatmask__c}}"
                   ng-model="attr.attributeRunTimeInfo.value"
                   ng-disabled="attr.isreadonly__c"
                   ng-required="attr.isrequired__c"
                   aria-label="{{attr.attributedisplayname__c}}" />
                <div class="input-group-btn" ng-if="attr.isquerydriven__c && !attr.isreadonly__c">
                    <button type="button" class="btn btn-default" ng-click="executeQueryableMethod(attr)">{{attr.querylabel__c}}</button>
                </div>
           </div>
          <div class="attr-query-results" collapse="!attr.attributeRunTimeInfo.showQueryResults">
               <div class="panel panel-sf">
                   <div class="panel-heading">
                       Results
                       <span class="pull-right p-add-omni"><a ng-click="attr.attributeRunTimeInfo.showQueryResults = !attr.attributeRunTimeInfo.showQueryResults">X</a></span>
                   </div>
                   <div ng-if="attr.attributeRunTimeInfo.queryresults.length == 0" class="query-results-empty">{{::OmniConfigProdQueryError}}</div>
                   <table class="table" ng-if="attr.attributeRunTimeInfo.queryresults.length > 0">
                       <tr ng-repeat="item in attr.attributeRunTimeInfo.queryresults">
                           <td ng-click="setQueryResultToAttributeValue(attr, item)">{{item}}</td>
                       </tr>
                   </table>
               </div>
           </div>
           <div class='vlc-sub-block' ng-include="'vlcErrorBlocProdConf.html'"></div>
           {{validForm = (loopform.loopname.$valid && attr.isrequired__c );""}}
           {{invalidForm = ((loopform.loopname.$invalid  && !attr.isrequired__c) || (loopform.loopname.$invalid && loopform.loopname.$dirty && attr.isrequired__c));""}}
       </ng-form>
   </script>

   <script type="text/ng-template" id="vlcProdConfCurrency.html">
       <ng-form name='loopform' class='col-md-14 col-sm-14 vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm, "is-disabled": attr.isreadonly__c}'>
           <label class='field-label' id="{{attr.attributeid__c}}">{{attr.attributedisplayname__c}} <span class='form-control-feedback text-danger' ng-show='attr.isrequired__c' ng-required="attr.isrequired__c"></span>
               <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='attr.valuedescription__c' data-placement='right' bs-tooltip='attr.valuedescription__c'></i>
           </label>
           <div class='input-group'>
               <span class='input-group-addon'>
                   <span>{{prod.currencySymbol}}</span>
               </span>
               <input id="{{attr.attributeid__c}}"
                   type='number'
                   name='loopname'
                   class='form-control vlc-currency'
                   placeholder='{{attr.formatmask__c}}'
                   ng-model='attr.attributeRunTimeInfo.value'
                   ng-disabled='attr.isreadonly__c'
                   ng-required='attr.isrequired__c'
                   aria-label='{{attr.attributedisplayname__c}}'/>
                <div class="input-group-btn" ng-if="attr.isquerydriven__c && !attr.isreadonly__c">
                    <button type="button" class="btn btn-default"  ng-click="executeQueryableMethod(attr)">{{attr.querylabel__c}}</button>
                </div>
           </div>
           <div class="attr-query-results" collapse="!attr.attributeRunTimeInfo.showQueryResults">
               <div class="panel panel-sf">
                   <div class="panel-heading">
                       Results
                       <span class="pull-right p-add-omni"><a ng-click="attr.attributeRunTimeInfo.showQueryResults = !attr.attributeRunTimeInfo.showQueryResults">X</a></span>
                   </div>
                   <div ng-if="attr.attributeRunTimeInfo.queryresults.length == 0" class="query-results-empty">{{::OmniConfigProdQueryError}}</div>
                   <table class="table" ng-if="attr.attributeRunTimeInfo.queryresults.length > 0">
                       <tr ng-repeat="item in attr.attributeRunTimeInfo.queryresults">
                           <td ng-click="setQueryResultToAttributeValue(attr, item)">{{item}}</td>
                       </tr>
                   </table>
              </div>
           </div>
           <div class='vlc-sub-block' ng-include="'vlcErrorBlocProdConf.html'"></div>
           {{validForm = (loopform.loopname.$valid && attr.isrequired__c );""}}
           {{invalidForm = ((loopform.loopname.$invalid  && !attr.isrequired__c) || (loopform.loopname.$invalid && loopform.loopname.$dirty && attr.isrequired__c));""}}
       </ng-form>
       </ng-form>
   </script>

   <script type="text/ng-template" id="vlcProdConfPercent.html">
       <ng-form name='loopform' class='col-md-14 col-sm-14 vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm, "is-disabled": attr.isreadonly__c}'>
           <label for="{{attr.attributeid__c}}" class='field-label'>{{attr.attributedisplayname__c}} <span class='form-control-feedback text-danger' ng-show='attr.isrequired__c' ng-required="attr.isrequired__c"></span>
               <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='attr.valuedescription__c' data-placement='right' bs-tooltip='attr.valuedescription__c'></i>
           </label>
           <div class='input-group'>
               <input  type="number" class="form-control attr-text prod-percent-omni"
                   name='loopname'
                   id="{{attr.attributeid__c}}"
                   placeholder="{{attr.formatmask__c}}"
                   ng-model="attr.attributeRunTimeInfo.value"
                   ng-disabled="attr.isreadonly__c"
                   ng-required="attr.isrequired__c"
                   aria-label="{{attr.attributedisplayname__c}}" />
               <div class="input-group-addon prod-percent-addon-omni">%</div>
               <div class="input-group-btn" ng-if="attr.isquerydriven__c && !attr.isreadonly__c" >
                    <button type="button" class="btn btn-default" ng-click="executeQueryableMethod(attr)">{{attr.querylabel__c}}</button>
                </div>
           </div>
           <div class="attr-query-results" collapse="!attr.attributeRunTimeInfo.showQueryResults">
               <div class="panel panel-sf">
                   <div class="panel-heading">
                       Results
                       <span class="pull-right p-add-omni"><a ng-click="attr.attributeRunTimeInfo.showQueryResults = !attr.attributeRunTimeInfo.showQueryResults">X</a></span>
                   </div>
                   <div ng-if="attr.attributeRunTimeInfo.queryresults.length == 0" class="query-results-empty">{{::OmniConfigProdQueryError}}</div>
                   <table class="table" ng-if="attr.attributeRunTimeInfo.queryresults.length > 0">
                       <tr ng-repeat="item in attr.attributeRunTimeInfo.queryresults">
                           <td ng-click="setQueryResultToAttributeValue(attr, item)">{{item}}</td>
                       </tr>
                   </table>
               </div>
           </div>
           <div class='vlc-sub-block' ng-include="'vlcErrorBlocProdConf.html'"></div>
           {{validForm = (loopform.loopname.$valid && attr.isrequired__c );""}}
           {{invalidForm = ((loopform.loopname.$invalid  && !attr.isrequired__c) || (loopform.loopname.$invalid && loopform.loopname.$dirty && attr.isrequired__c));""}}
       </ng-form>
   </script>

   <script type="text/ng-template" id="vlcProdConfPicklist.html">
       <div ng-if="attr.attributeRunTimeInfo.uiDisplayType === 'Radiobutton'" class="row">
           <ng-form name='loopform' class = 'has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm, "is-disabled": attr.isreadonly__c}'>
              <div class='col-md-14 col-sm-14'>
                  <label class="field-label">{{attr.attributedisplayname__c}} <span class='form-control-feedback text-danger' ng-show='attr.isrequired__c' ng-required="attr.isrequired__c"></span>
                      <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='attr.valuedescription__c' data-placement='right' bs-tooltip='attr.valuedescription__c'></i>
                  </label>
                  <div class="col-sm-14 vlc-radion-prod-omni">
                      <div ng-repeat="value in attr.attributeRunTimeInfo.values" class="attr-radio">
                          <label>
                              <input type="radio" 
                               name="{{attr.attributeid__c}}"
                               ng-model="attr.attributeRunTimeInfo.selectedItem"
                               ng-value="value"
                               ng-disabled="attr.isreadonly__c"
                               ng-required="attr.isrequired__c"
                               aria-label="{{attr.attributedisplayname__c}}" />
                               &nbsp;&nbsp;{{value.displayText}}
                          </label>
                      </div>
                  </div>
              </div>
              <div class='vlc-sub-block'></div>
              {{validForm = (loopform.$valid && attr.isrequired__c );""}}
              {{invalidForm =  ((loopform.$invalid) || (loopform.$invalid && loopform.$dirty));""}}
           </ng-form>
       </div>
       <div ng-if="attr.attributeRunTimeInfo.uiDisplayType === 'Dropdown'" class="row">
           <ng-form name='loopform' class = 'vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm, "is-disabled": attr.isreadonly__c}'>
              <div  class='col-md-14 col-sm-14 vlc-form-group'>
                  <label class='field-label' for="{{attr.attributeid__c}}" class="col-sm-2 control-label lbl-text">{{attr.attributedisplayname__c}} <span class='form-control-feedback text-danger' ng-show='attr.isrequired__c' ng-required="attr.isrequired__c"></span>
                      <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='attr.valuedescription__c' data-placement='right' bs-tooltip='attr.valuedescription__c'></i>
                  </label>
                  <label class='select-label'>
                      <select id="{{attr.attributeid__c}}" class="form-control attr-select"
                      name='loopname'
                      ng-model="attr.attributeRunTimeInfo.selectedItem"
                      ng-options="value.displayText for value in attr.attributeRunTimeInfo.values"
                      ng-required="attr.isrequired__c"
                      ng-disabled="attr.isreadonly__c">
                          <option value="">{{::OmniClear}}</option>
                      </select>
                      <div class='vlc-sub-block' ng-include="'vlcErrorBlocProdConf.html'"></div>
                  </label>
              </div>
              {{validForm = (loopform.loopname.$valid && attr.isrequired__c );""}}
              {{invalidForm = ((loopform.loopname.$invalid  && !attr.isrequired__c) || (loopform.loopname.$invalid && loopform.loopname.$dirty && attr.isrequired__c));""}}
          </ng-form>
       </div>
   </script>

   <script type="text/ng-template" id="vlcProdConfMultiPicklist.html">
       <div ng-if="attr.attributeRunTimeInfo.uiDisplayType === 'Checkbox'" class="row">
           <ng-form name='loopform' class='has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm, "is-disabled": attr.isreadonly__c }'>
               <div class='col-md-14 col-sm-14' >
                   <label class="field-label">{{attr.attributedisplayname__c}} <span class='form-control-feedback text-danger' ng-show='attr.isrequired__c'></span>
                       <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='attr.valuedescription__c' data-placement='right' bs-tooltip='attr.valuedescription__c'></i>
                       <i class='icon-v-check-circle vlc-valid-input form-control-feedback'  style='position:inherit' ng-show='validForm'></i>
                       <i class='icon-v-close-circle vlc-error-input form-control-feedback' style='position:inherit' ng-show='invalidForm'></i>
                   </label>
                   <div class='error-field omni-config-prod-req' ng-show='loopform.$error' ng-hide='loopform.$pristine' style='position:inherit'>
                       <small ng-show='loopform.$error.required' class='prop-error form-control-feedback'>{{::OmniConfigProdRequired}}</small>
                   </div>
                   <div class="col-sm-14 vlc-radion-prod-omni">
                       <div ng-repeat="value in attr.attributeRunTimeInfo.values">
                           <label>
                               <input  type="checkbox"
                               class='vlc-checkbox-solo'
                               ng-model="value.checked"
                               ng-disabled="attr.isreadonly__c"
                               ng-change='onClickMultiSelect(this, attr, value)'
                               ng-init = 'onClickMultiSelect(this, attr, value)'
                               aria-label="{{attr.attributedisplayname__c}}" />
                               &nbsp;&nbsp;{{value.displayText}}
                          </label>
                      </div>
                   </div>
               </div>
               <div class='vlc-sub-block'></div>
              {{validForm = (loopform.$valid && attr.isrequired__c );""}}
              {{invalidForm =( loopform.$error.required );""}}
           </ng-form>
       </div>
       <div ng-if="attr.attributeRunTimeInfo.uiDisplayType === 'Dropdown'" class="row">
           <ng-form name='loopform' ng-class='{ "has-success": validForm, "has-error": invalidForm, "is-disabled": attr.isreadonly__c}'>
               <div  class='col-md-14 col-sm-14'>
                   <label for="{{attr.attributeid__c}}" class="field-label">{{attr.attributedisplayname__c}} <span class='form-control-feedback text-danger' ng-show='attr.isrequired__c' ng-required="attr.isrequired__c"></span>
                       <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='attr.valuedescription__c' data-placement='right' bs-tooltip='attr.valuedescription__c'></i>
                       <i class='icon-v-check-circle vlc-valid-input form-control-feedback'  style='position:inherit' ng-show='validForm'></i>
                       <i class='icon-v-close-circle vlc-error-input form-control-feedback' style='position:inherit' ng-show='invalidForm'></i>
                   </label>
                   <div class='error-field omni-config-prod-req' ng-show='loopform.$error' ng-hide='loopform.$pristine' style='position:inherit'>
                       <small ng-show='loopform.$error.required' class='prop-error form-control-feedback'>{{::OmniConfigProdRequired}}</small>
                   </div>
                   <div class="col-sm-14">
                       <select id="{{attr.attributeid__c}}" multiple="multiple" class="form-control attr-select"
                       name='loopname'
                       ng-model="attr.attributeRunTimeInfo.selectedItems"
                       ng-options="value.displayText for value in attr.attributeRunTimeInfo.values"
                       ng-change="onClickMultiSelect(this, attr, value)"
                       ng-init="onClickMultiSelect(this, attr, value)"
                       ng-disabled="attr.isreadonly__c">
                      </select>
                   </div>
               </div>
               <div class='vlc-sub-block'></div>
               {{validForm = (loopform.$valid && attr.isrequired__c );""}}
               {{invalidForm =( loopform.$error.required );""}}
           </ng-form>
       </div>
   </script>

    <script type="text/ng-template" id="vlcProdConfDate.html">
        <ng-form name='loopform' class='col-md-14 col-sm-14 vlc-form-group' ng-class='{ "has-success": validForm, "has-error": invalidForm, "is-disabled": attr.isreadonly__c}'>
            <label for="{{attr.attributeid__c}}" class='field-label'>{{attr.attributedisplayname__c}} <span class='form-control-feedback text-danger' ng-show='attr.isrequired__c' ng-required="attr.isrequired__c"></span></label>
                <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='attr.valuedescription__c' data-placement='right' bs-tooltip='attr.valuedescription__c'></i>
           </label>
            <div class='input-group'>
                <input type="text" class="form-control attr-date"
                        name='loopname'
                        id="{{attr.attributeid__c}}"
                        placeholder="{{attr.formatmask__c}}"
                        ng-model="attr.attributeRunTimeInfo.value"
                        ng-disabled="attr.isreadonly__c"
                        ng-required="attr.isrequired__c"
                        data-date-type='date'
                        data-icon-left='icon-v-left-caret'
                        data-icon-right='icon-v-right-caret'
                        bs-datepicker="true"
                        data-autoclose="true">
                <span class='input-group-addon'>
                    <i class='icon-v-calendar-line date-picker'></i>
                </span>
            </div>
            <div class='vlc-sub-block' ng-include="'vlcErrorBlocProdConf.html'"></div>
            {{validForm = (loopform.loopname.$valid && attr.isrequired__c );""}}
            {{invalidForm = ((loopform.loopname.$invalid  && !attr.isrequired__c) || (loopform.loopname.$invalid && loopform.loopname.$dirty && attr.isrequired__c));""}}
        </ng-form>
    </script>

    <script type="text/ng-template" id="vlcProdConfDatetime.html">
        <ng-form name='loopform' class='col-md-14 col-sm-14 vlc-form-group has-feedback' ng-class='{ "has-success": validForm, "has-error": invalidForm, "is-disabled": attr.isreadonly__c}'>
            <label for="{{attr.attributeid__c}}" class='field-label'>{{attr.attributedisplayname__c}} <span class='form-control-feedback text-danger' ng-show='attr.isrequired__c' ng-required="attr.isrequired__c"></span>
                <i class='icon-v-question-circle-line vlc-question-tooltip' ng-show='attr.valuedescription__c' data-placement='right' bs-tooltip='attr.valuedescription__c'></i>
           </label> 
            <div class='row prod vlc-datetime-prod-omni'>
                <div class='col-md-6 col-sm-6 col-xs-12 no-padding-left'>
                    <div class='input-group'>
                        <input  type="text" class="form-control attr-date"
                            name='loopname'
                            id="{{attr.attributeid__c}}"
                            data-icon-left='icon-v-left-caret'
                            data-icon-right='icon-v-right-caret'
                            data-date-type='date'
                            placeholder="{{attr.formatmask__c}}"
                            ng-model="attr.attributeRunTimeInfo.value"
                            ng-disabled="attr.isreadonly__c"
                            ng-required="attr.isrequired__c"
                            bs-datepicker="true"
                            data-autoclose="true">
                        <span class='input-group-addon'>
                            <i class='icon-v-calendar-line date-picker'></i>
                        </span>
                    </div>
                </div>
                <div class='col-md-6 col-sm-6 col-xs-12 no-padding-right'>
                    <div class='input-group'>
                        <input  type="text" class="form-control attr-date"
                            ng-model="attr.attributeRunTimeInfo.value"
                            ng-disabled="attr.isreadonly__c"
                            ng-required="attr.isrequired__c"
                            data-icon-up='icon-v-up-caret' 
                            data-icon-down='icon-v-down-caret' 
                            bs-timepicker="true"
                            data-autoclose="true">
                        <span class='input-group-addon'>
                            <i class='icon-v-time-line'></i>
                        </span>
                    </div>
                </div>
            </div>
            <div class='vlc-sub-block' ng-include="'vlcErrorBlocProdConf.html'"></div>
            {{validForm = (loopform.loopname.$valid && attr.isrequired__c );""}}
            {{invalidForm = ((loopform.loopname.$invalid  && !attr.isrequired__c) || (loopform.loopname.$invalid && loopform.loopname.$dirty && attr.isrequired__c));""}}
        </ng-form>
    </script>

    <script type="text/ng-template" id="vlcErrorBlocProdConf.html">
        <div class='error-field' ng-show='loopform.loopname.$error' ng-hide='loopform.loopname.$pristine'>
            <i class='icon-v-close-circle vlc-error-input form-control-feedback' ng-show='invalidForm'></i>
            <small ng-show='loopform.loopname.$error.required' class='prop-error form-control-feedback'>{{::OmniConfigProdRequired}}</small>
        </div>
    </script>
